---
metadata:
    display_name: JavaScript 사용자 정의 문제
    markdown: !!null
    showanswer: never
data: |
      <problem>
          <p>
              사용자 정의 JavaScript 문제 또는 JS 입력 문제라고도 불리는 이 문제에서는 Studio에서 JavaScript를 사용하는 문제 또는 도구를 추가합니다. Studio는 학습자가 LMS에서 문제와 상호 작용할 수 있도록 IFrame에 문제를 포함시킵니다. JavaScript와 일부 기본 Python을 사용하여 학습자의 작업을 채점 할 수 있으며 채점은 edX 채점 시스템에 통합됩니다.
          </p>
          <p>
              작성한 JS 입력 문제점은 HTML, JavaScript 및 CSS (Cascading Style Sheet)를 사용해야 합니다. Google Web Toolkit (GWT)과 같은 애플리케이션 작성 도구를 사용하여 JS 입력 문제를 작성할 수 있습니다.
          </p>
          <p>
              자세한 내용은 edX 코스 빌드 및 실행에서 <a href="https://edx.readthedocs.io/projects/edx-partner-course-staff/en/latest/exercises_tools/custom_javascript.html" target="_blank">사용자 정의 JavaScript 문제</a>를 참조하십시오.
          </p>
          <p>
              JavaScript 개발자는 EdX 개발자 안내서에서 <a href="https://edx.readthedocs.io/projects/edx-developer-guide/en/latest/extending_platform/javascript.html" target="_blank">사용자 정의 JavaScript 응용 프로그램</a>을 볼 수도 있습니다.
          </p>
          <p>
              문제를 추가 할 때 <strong>설정</strong>을 선택하여 적용된 <strong>Display Name</strong>과 다른 값을 지정하십시오. 또한 <strong>jsinput</strong> 태그에 <strong>title</strong> 속성을 지정하십시오. 이 title은 생성 된 IFrame의 title 속성에 사용됩니다. 일반적으로 IFrame의 title 속성은 <strong>html_file</strong> 속성으로 지정된 IFrame 내에서 호스팅되는 HTML의 제목 태그와 일치해야합니다.
          </p>
          <p>다음의 예제 문제를 모델로 사용할 수 있다.</p>

          <customresponse cfn="check_function">
      <script type="loncapa/python">
      <![CDATA[
      import json
      def check_function(e, ans):
        """
        "response" is a dictionary that contains two keys, "answer" and "state".
        The value of "answer" is the JSON string that "getGrade" returns.
        The value of "state" is the JSON string that "getState" returns.
        Clicking either "Submit" or "Save" registers the current state.
        """
        response = json.loads(ans)

        # You can use the value of the answer key to grade:
        answer = json.loads(response["answer"])
        return answer == "correct"

        # Or you can use the value of the state key to grade:
        """
        state = json.loads(response["state"])
        return state["selectedChoice"] == "correct"
        """
      ]]>
      </script>
            <p>IFrame 앞에 표시된 단락 텍스트 입니다.</p>
            <jsinput
              gradefn="JSInputDemo.getGrade"
              get_statefn="JSInputDemo.getState"
              set_statefn="JSInputDemo.setState"
              initial_state='{"selectedChoice": "오답1", "availableChoices": ["오답1", "정답", "오답 2"]}'
              width="600"
              height="100"
              html_file="https://files.edx.org/custom-js-example/jsinput_example.html"
              title="Dropdown with Dynamic Text"
              sop="false"/>
          </customresponse>
      </problem>