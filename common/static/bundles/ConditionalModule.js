(function(e, a) { for(var i in a) e[i] = a[i]; }(window, webpackJsonp([24,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],{

/***/ "./common/static/xmodule/modules/js/001-878dbdd4283b53f1f274dc107b722b00.js":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function($) {/*** IMPORTS FROM imports-loader ***/
(function () {

  // Once generated by CoffeeScript 1.9.3, but now lives as pure JS
  /* eslint-disable */
  (function () {
    this.Conditional = function () {
      function Conditional(element, callerElId) {
        var dependencies;
        this.el = $(element).find('.conditional-wrapper');
        this.callerElId = callerElId;
        if (callerElId !== void 0) {
          dependencies = this.el.data('depends');
          if (typeof dependencies === 'string' && dependencies.length > 0 && dependencies.indexOf(callerElId) === -1) {
            return;
          }
        }
        this.url = this.el.data('url');
        if (this.url) {
          this.render(element);
        }
      }

      Conditional.prototype.render = function (element) {
        return $.postWithPrefix(this.url + "/conditional_get", function (_this) {
          return function (response) {
            var i, j, len, parentEl, parentId, ref;
            _this.el.html('');
            ref = response.html;
            for (j = 0, len = ref.length; j < len; j++) {
              i = ref[j];
              _this.el.append(i);
            }
            parentEl = $(element).parent();
            parentId = parentEl.attr('id');
            if (response.message === false) {
              if (parentEl.hasClass('vert')) {
                parentEl.hide();
              } else {
                $(element).hide();
              }
            } else {
              if (parentEl.hasClass('vert')) {
                parentEl.show();
              } else {
                $(element).show();
              }
            }

            /*
            The children are rendered with a new request, so they have a different request-token.
            Use that token instead of @requestToken by simply not passing a token into initializeBlocks.
             */
            return XBlock.initializeBlocks(_this.el);
          };
        }(this));
      };

      return Conditional;
    }();
  }).call(this);
}).call(window);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),

/***/ 0:
/***/ (function(module, exports) {

(function() { module.exports = window["jQuery"]; }());

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

(function() { module.exports = window["_"]; }());

/***/ }),

/***/ 13:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("./common/static/xmodule/modules/js/000-58032517f54c5c1a704a908d850cbe64.js");
__webpack_require__("./common/static/xmodule/modules/js/001-878dbdd4283b53f1f274dc107b722b00.js");
__webpack_require__("./common/static/xmodule/modules/js/002-3918b2d4f383c04fed8227cc9f523d6e.js");
module.exports = __webpack_require__("./common/static/xmodule/modules/js/003-d47e678753905042c21bbc110fb3f8d8.js");


/***/ })

},[13])));
//# sourceMappingURL=ConditionalModule.js.map