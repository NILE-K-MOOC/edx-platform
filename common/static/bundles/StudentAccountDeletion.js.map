{"version":3,"sources":["webpack:///./lms/static/js/student_account/AccountsClient.js?4826","webpack:///./lms/static/js/student_account/components/StudentAccountDeletion.jsx?0536","webpack:///./lms/static/js/student_account/components/StudentAccountDeletionModal.jsx?721f","webpack:///./lms/static/js/student_account/components/removeLoggedInCookies.js?f25b"],"names":["deactivate","password","fetch","method","credentials","headers","Cookies","get","body","encodeURIComponent","then","response","ok","Error","StudentAccountDeletion","props","closeDeletionModal","bind","loadDeletionModal","state","deletionModalOpen","isActive","socialAuthConnected","getConnectedSocialAuth","socialAccountLinks","providers","reduce","acc","value","connected","setState","modalTrigger","focus","loseAccessText","StringUtils","interpolate","gettext","htmlStart","htmlEnd","showError","socialAuthError","activationError","__html","input","React","Component","propTypes","PropTypes","bool","isRequired","shape","arrayOf","object","StudentAccountDeletionConfirmationModal","deleteAccount","handlePasswordInputChange","passwordFieldValidation","handleConfirmationModalClose","passwordSubmitted","passwordValid","validationMessage","validationErrorDetails","accountQueuedForDeletion","responseError","onClose","removeLoggedInCookies","window","location","href","catch","failedSubmission","error","status","title","feedback","length","renderSuccessModal","renderConfirmationModal","func","defaultProps","hostname","isLocalhost","indexOf","isStage","domain","cookie","remove","prefix"],"mappings":"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","file":"StudentAccountDeletion.js","sourcesContent":["import 'whatwg-fetch';\nimport Cookies from 'js-cookie';\n\nconst deactivate = (password) => fetch('/api/user/v1/accounts/deactivate_logout/', {\n  method: 'POST',\n  credentials: 'same-origin',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n    'X-CSRFToken': Cookies.get('csrftoken'),\n  },\n  // URLSearchParams + polyfill doesn't work in IE11\n  body: `password=${encodeURIComponent(password)}`,\n}).then((response) => {\n  if (response.ok) {\n    return response;\n  }\n\n  throw new Error(response);\n});\n\nexport {\n  deactivate,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lms/static/js/student_account/AccountsClient.js","/* globals gettext */\n/* eslint-disable react/no-danger, import/prefer-default-export */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Icon, StatusAlert } from '@edx/paragon/static';\nimport StringUtils from 'edx-ui-toolkit/js/utils/string-utils';\nimport StudentAccountDeletionModal from './StudentAccountDeletionModal';\n\nexport class StudentAccountDeletion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.closeDeletionModal = this.closeDeletionModal.bind(this);\n    this.loadDeletionModal = this.loadDeletionModal.bind(this);\n    this.state = {\n      deletionModalOpen: false,\n      isActive: props.isActive,\n      socialAuthConnected: this.getConnectedSocialAuth(),\n    };\n  }\n\n  getConnectedSocialAuth() {\n    const { socialAccountLinks } = this.props;\n    if (socialAccountLinks && socialAccountLinks.providers) {\n      return socialAccountLinks.providers.reduce((acc, value) => acc || value.connected, false);\n    }\n\n    return false;\n  }\n\n  closeDeletionModal() {\n    this.setState({ deletionModalOpen: false });\n    this.modalTrigger.focus();\n  }\n\n  loadDeletionModal() {\n    this.setState({ deletionModalOpen: true });\n  }\n\n  render() {\n    const { deletionModalOpen, socialAuthConnected, isActive } = this.state;\n    const loseAccessText = StringUtils.interpolate(\n      gettext('You may also lose access to verified certificates and other program credentials like MicroMasters certificates. If you want to make a copy of these for your records before proceeding with deletion, follow the instructions for {htmlStart}printing or downloading a certificate{htmlEnd}.'),\n      {\n        htmlStart: '<a href=\"http://edx.readthedocs.io/projects/edx-guide-for-students/en/latest/SFD_certificates.html#printing-a-certificate\" target=\"_blank\">',\n        htmlEnd: '</a>',\n      },\n    );\n\n    const showError = socialAuthConnected || !isActive;\n\n    const socialAuthError = StringUtils.interpolate(\n      gettext('Before proceeding, please {htmlStart}unlink all social media accounts{htmlEnd}.'),\n      {\n        htmlStart: '<a href=\"https://support.edx.org/hc/en-us/articles/207206067\" target=\"_blank\">',\n        htmlEnd: '</a>',\n      },\n    );\n\n    const activationError = StringUtils.interpolate(\n      gettext('Before proceeding, please {htmlStart}activate your account{htmlEnd}.'),\n      {\n        htmlStart: '<a href=\"https://support.edx.org/hc/en-us/articles/115000940568-How-do-I-activate-my-account-\" target=\"_blank\">',\n        htmlEnd: '</a>',\n      },\n    );\n\n    return (\n      <div className=\"account-deletion-details\">\n        <p className=\"account-settings-header-subtitle\">{ gettext('We’re sorry to see you go!') }</p>\n        <p className=\"account-settings-header-subtitle\">{ gettext('Please note: Deletion of your account and personal data is permanent and cannot be undone. EdX will not be able to recover your account or the data that is deleted.') }</p>\n        <p className=\"account-settings-header-subtitle\">{ gettext('Once your account is deleted, you cannot use it to take courses on the edX app, edx.org, or any other site hosted by edX. This includes access to edx.org from your employer’s or university’s system and access to private sites offered by MIT Open Learning, Wharton Executive Education, and Harvard Medical School.') }</p>\n        <p\n          className=\"account-settings-header-subtitle\"\n          dangerouslySetInnerHTML={{ __html: loseAccessText }}\n        />\n\n        <Button\n          id=\"delete-account-btn\"\n          className={['btn-outline-primary']}\n          disabled={showError}\n          label={gettext('Delete My Account')}\n          inputRef={(input) => { this.modalTrigger = input; }}\n          onClick={this.loadDeletionModal}\n        />\n        {showError &&\n          <StatusAlert\n            dialog={(\n              <div className=\"modal-alert\">\n                <div className=\"icon-wrapper\">\n                  <Icon id=\"delete-confirmation-body-error-icon\" className={['fa', 'fa-exclamation-circle']} />\n                </div>\n                <div className=\"alert-content\">\n                  {socialAuthConnected && isActive &&\n                    <p dangerouslySetInnerHTML={{ __html: socialAuthError }} />\n                  }\n                  {!isActive && <p dangerouslySetInnerHTML={{ __html: activationError }} /> }\n                </div>\n              </div>\n            )}\n            alertType=\"danger\"\n            dismissible={false}\n            open\n          />\n        }\n        {deletionModalOpen && <StudentAccountDeletionModal onClose={this.closeDeletionModal} />}\n      </div>\n    );\n  }\n}\n\nStudentAccountDeletion.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  socialAccountLinks: PropTypes.shape({\n    providers: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lms/static/js/student_account/components/StudentAccountDeletion.jsx","/* globals gettext */\n/* eslint-disable react/no-danger */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Icon, InputText, StatusAlert } from '@edx/paragon/static';\nimport StringUtils from 'edx-ui-toolkit/js/utils/string-utils';\n\nimport { deactivate } from '../AccountsClient';\nimport removeLoggedInCookies from './removeLoggedInCookies';\n\nclass StudentAccountDeletionConfirmationModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteAccount = this.deleteAccount.bind(this);\n    this.handlePasswordInputChange = this.handlePasswordInputChange.bind(this);\n    this.passwordFieldValidation = this.passwordFieldValidation.bind(this);\n    this.handleConfirmationModalClose = this.handleConfirmationModalClose.bind(this);\n    this.state = {\n      password: '',\n      passwordSubmitted: false,\n      passwordValid: true,\n      validationMessage: '',\n      validationErrorDetails: '',\n      accountQueuedForDeletion: false,\n      responseError: false,\n    };\n  }\n\n  handleConfirmationModalClose() {\n    this.props.onClose();\n\n    removeLoggedInCookies();\n    window.location.href = 'https://www.edx.org';\n  }\n\n  deleteAccount() {\n    return this.setState(\n      { passwordSubmitted: true },\n      () => (\n        deactivate(this.state.password)\n          .then(() => this.setState({\n            accountQueuedForDeletion: true,\n            responseError: false,\n            passwordSubmitted: false,\n            validationMessage: '',\n            validationErrorDetails: '',\n          }))\n          .catch(error => this.failedSubmission(error))\n      ),\n    );\n  }\n\n  failedSubmission(error) {\n    const { status } = error;\n    const title = status === 403 ? gettext('Password is incorrect') : gettext('Unable to delete account');\n    const body = status === 403 ? gettext('Please re-enter your password.') : gettext('Sorry, there was an error trying to process your request. Please try again later.');\n\n    this.setState({\n      passwordSubmitted: false,\n      responseError: true,\n      passwordValid: false,\n      validationMessage: title,\n      validationErrorDetails: body,\n    });\n  }\n\n  handlePasswordInputChange(value) {\n    this.setState({ password: value });\n  }\n\n  passwordFieldValidation(value) {\n    let feedback = { passwordValid: true };\n\n    if (value.length < 1) {\n      feedback = {\n        passwordValid: false,\n        validationMessage: gettext('A Password is required'),\n        validationErrorDetails: '',\n      };\n    }\n\n    this.setState(feedback);\n  }\n\n  renderConfirmationModal() {\n    const {\n      passwordValid,\n      password,\n      passwordSubmitted,\n      responseError,\n      validationErrorDetails,\n      validationMessage,\n    } = this.state;\n    const { onClose } = this.props;\n    const loseAccessText = StringUtils.interpolate(\n      gettext('You may also lose access to verified certificates and other program credentials like MicroMasters certificates. If you want to make a copy of these for your records before proceeding with deletion, follow the instructions for {htmlStart}printing or downloading a certificate{htmlEnd}.'),\n      {\n        htmlStart: '<a href=\"http://edx.readthedocs.io/projects/edx-guide-for-students/en/latest/SFD_certificates.html#printing-a-certificate\" target=\"_blank\">',\n        htmlEnd: '</a>',\n      },\n    );\n\n    return (\n      <div className=\"delete-confirmation-wrapper\">\n        <Modal\n          title={gettext('Are you sure?')}\n          renderHeaderCloseButton={false}\n          onClose={onClose}\n          aria-live=\"polite\"\n          open\n          body={(\n            <div>\n              {responseError &&\n                <StatusAlert\n                  dialog={(\n                    <div className=\"modal-alert\">\n                      <div className=\"icon-wrapper\">\n                        <Icon id=\"delete-confirmation-body-error-icon\" className={['fa', 'fa-exclamation-circle']} />\n                      </div>\n                      <div className=\"alert-content\">\n                        <h3 className=\"alert-title\">{ validationMessage }</h3>\n                        <p>{ validationErrorDetails }</p>\n                      </div>\n                    </div>\n                  )}\n                  alertType=\"danger\"\n                  dismissible={false}\n                  open\n                />\n              }\n\n              <StatusAlert\n                dialog={(\n                  <div className=\"modal-alert\">\n                    <div className=\"icon-wrapper\">\n                      <Icon id=\"delete-confirmation-body-warning-icon\" className={['fa', 'fa-exclamation-triangle']} />\n                    </div>\n                    <div className=\"alert-content\">\n                      <h3 className=\"alert-title\">{ gettext('You have selected “Delete my account.” Deletion of your account and personal data is permanent and cannot be undone. EdX will not be able to recover your account or the data that is deleted.') }</h3>\n                      <p>{ gettext('If you proceed, you will be unable to use this account to take courses on the edX app, edx.org, or any other site hosted by edX. This includes access to edx.org from your employer’s or university’s system and access to private sites offered by MIT Open Learning, Wharton Executive Education, and Harvard Medical School.') }</p>\n                      <p dangerouslySetInnerHTML={{ __html: loseAccessText }} />\n                    </div>\n                  </div>\n                )}\n                dismissible={false}\n                open\n              />\n              <p className=\"next-steps\">{ gettext('If you still wish to continue and delete your account, please enter your account password:') }</p>\n              <InputText\n                name=\"confirm-password\"\n                label=\"Password\"\n                type=\"password\"\n                className={['confirm-password-input']}\n                onBlur={this.passwordFieldValidation}\n                isValid={passwordValid}\n                validationMessage={validationMessage}\n                onChange={this.handlePasswordInputChange}\n                autoComplete=\"new-password\"\n                themes={['danger']}\n              />\n            </div>\n          )}\n          closeText={gettext('Cancel')}\n          buttons={[\n            <Button\n              label={gettext('Yes, Delete')}\n              onClick={this.deleteAccount}\n              disabled={password.length === 0 || passwordSubmitted}\n            />,\n          ]}\n        />\n      </div>\n    );\n  }\n\n  renderSuccessModal() {\n    return (\n      <div className=\"delete-success-wrapper\">\n        <Modal\n          title={gettext('We\\'re sorry to see you go! Your account will be deleted shortly.')}\n          renderHeaderCloseButton={false}\n          body={gettext('Account deletion, including removal from email lists, may take a few weeks to fully process through our system. If you want to opt-out of emails before then, please unsubscribe from the footer of any email.')}\n          onClose={this.handleConfirmationModalClose}\n          aria-live=\"polite\"\n          open\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { accountQueuedForDeletion } = this.state;\n\n    return accountQueuedForDeletion ? this.renderSuccessModal() : this.renderConfirmationModal();\n  }\n}\n\nStudentAccountDeletionConfirmationModal.propTypes = {\n  onClose: PropTypes.func,\n};\n\nStudentAccountDeletionConfirmationModal.defaultProps = {\n  onClose: () => {},\n};\n\nexport default StudentAccountDeletionConfirmationModal;\n\n\n\n// WEBPACK FOOTER //\n// ./lms/static/js/student_account/components/StudentAccountDeletionModal.jsx","import cookie from 'js-cookie';\n\nconst removeLoggedInCookies = () => {\n  const hostname = window.location.hostname;\n  const isLocalhost = hostname.indexOf('localhost') >= 0;\n  const isStage = hostname.indexOf('stage') >= 0;\n\n  let domain = '.edx.org';\n  if (isLocalhost) {\n    domain = 'localhost';\n  } else if (isStage) {\n    domain = '.stage.edx.org';\n  }\n\n  cookie.remove('edxloggedin', { domain });\n\n  if (isLocalhost) {\n    // localhost doesn't have prefixes\n    cookie.remove('csrftoken', { domain });\n    cookie.remove('edx-user-info', { domain });\n  } else {\n    // does not take sandboxes into account\n    const prefix = isStage ? 'stage' : 'prod';\n    // both stage and prod csrf tokens are set to .edx.org\n    cookie.remove(`${prefix}-edx-csrftoken`, { domain: '.edx.org' });\n    cookie.remove(`${prefix}-edx-user-info`, { domain });\n  }\n};\n\nexport default removeLoggedInCookies;\n\n\n\n// WEBPACK FOOTER //\n// ./lms/static/js/student_account/components/removeLoggedInCookies.js"],"sourceRoot":""}