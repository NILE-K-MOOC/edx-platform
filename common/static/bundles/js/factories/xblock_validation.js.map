{"version":3,"sources":["webpack:///./cms/static/js/factories/xblock_validation.js","webpack:///./cms/static/js/models/xblock_validation.js","webpack:///./cms/static/js/views/xblock_validation.js","webpack:///external \"jQuery\"?0cb8***************","webpack:///external \"_\"?b3b9*************","webpack:///external \"Backbone\"?709d********","webpack:///external \"gettext\"?8b52******"],"names":["XBlockValidationFactory","validationMessages","hasEditingUrl","isRoot","isUnit","validationEle","model","response","showSummaryOnly","parse","get","el","root","render","Backbone","gettext","_","XBlockValidationModel","Model","extend","defaults","summary","messages","empty","xblock_id","WARNING","ERROR","NOT_CONFIGURED","text","type","find","message","$","BaseView","XBlockValidationView","initialize","options","prototype","call","template","loadTemplate","$el","html","validation","additionalClasses","getAdditionalClasses","getIcon","bind","getDisplayName","messageType","length"],"mappings":"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","file":"js/factories/xblock_validation.js","sourcesContent":["\nimport * as XBlockValidationView from 'js/views/xblock_validation';\nimport * as XBlockValidationModel from 'js/models/xblock_validation';\n\n'use strict';\nexport default function XBlockValidationFactory(validationMessages, hasEditingUrl, isRoot, isUnit, validationEle) {\n    var model, response;\n\n    if (hasEditingUrl && !isRoot) {\n        validationMessages.showSummaryOnly = true;\n    }\n    response = validationMessages;\n    response.isUnit = isUnit;\n\n    model = new XBlockValidationModel(response, {parse: true});\n\n    if (!model.get('empty')) {\n        new XBlockValidationView({el: validationEle, model: model, root: isRoot}).render();\n    }\n};\n\nexport {XBlockValidationFactory}\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/factories/xblock_validation.js","define(['backbone', 'gettext', 'underscore'], function(Backbone, gettext, _) {\n    /**\n     * Model for xblock validation messages as displayed in Studio.\n     */\n    var XBlockValidationModel = Backbone.Model.extend({\n        defaults: {\n            summary: {},\n            messages: [],\n            empty: true,\n            xblock_id: null\n        },\n\n        WARNING: 'warning',\n        ERROR: 'error',\n        NOT_CONFIGURED: 'not-configured',\n\n        parse: function(response) {\n            if (!response.empty) {\n                var summary = 'summary' in response ? response.summary : {};\n                var messages = 'messages' in response ? response.messages : [];\n                if (!summary.text) {\n                    if (response.isUnit) {\n                        summary.text = gettext('This unit has validation issues.');\n                    } else {\n                        summary.text = gettext('This component has validation issues.');\n                    }\n                }\n                if (!summary.type) {\n                    summary.type = this.WARNING;\n                    // Possible types are ERROR, WARNING, and NOT_CONFIGURED. NOT_CONFIGURED is treated as a warning.\n                    _.find(messages, function(message) {\n                        if (message.type === this.ERROR) {\n                            summary.type = this.ERROR;\n                            return true;\n                        }\n                        return false;\n                    }, this);\n                }\n                response.summary = summary;\n                if (response.showSummaryOnly) {\n                    messages = [];\n                }\n                response.messages = messages;\n            }\n\n            return response;\n        }\n    });\n    return XBlockValidationModel;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/models/xblock_validation.js","define(['jquery', 'underscore', 'js/views/baseview', 'gettext'],\n    function($, _, BaseView, gettext) {\n        /**\n         * View for xblock validation messages as displayed in Studio.\n         */\n        var XBlockValidationView = BaseView.extend({\n\n            // Takes XBlockValidationModel as a model\n            initialize: function(options) {\n                BaseView.prototype.initialize.call(this);\n                this.template = this.loadTemplate('xblock-validation-messages');\n                this.root = options.root;\n            },\n\n            render: function() {\n                this.$el.html(this.template({\n                    validation: this.model,\n                    additionalClasses: this.getAdditionalClasses(),\n                    getIcon: this.getIcon.bind(this),\n                    getDisplayName: this.getDisplayName.bind(this)\n                }));\n                return this;\n            },\n\n            /**\n             * Returns the icon css class based on the message type.\n             * @param messageType\n             * @returns string representation of css class that will render the correct icon, or null if unknown type\n             */\n            getIcon: function(messageType) {\n                if (messageType === this.model.ERROR) {\n                    return 'fa-exclamation-circle';\n                } else if (messageType === this.model.WARNING || messageType === this.model.NOT_CONFIGURED) {\n                    return 'fa-exclamation-triangle';\n                }\n                return null;\n            },\n\n            /**\n             * Returns a display name for a message (useful for screen readers), based on the message type.\n             * @param messageType\n             * @returns string display name (translated)\n             */\n            getDisplayName: function(messageType) {\n                if (messageType === this.model.WARNING || messageType === this.model.NOT_CONFIGURED) {\n                    // Translators: This message will be added to the front of messages of type warning,\n                    // e.g. \"Warning: this component has not been configured yet\".\n                    return gettext('Warning');\n                } else if (messageType === this.model.ERROR) {\n                    // Translators: This message will be added to the front of messages of type error,\n                    // e.g. \"Error: required field is missing\".\n                    return gettext('Error');\n                }\n                return null;\n            },\n\n            /**\n             * Returns additional css classes that can be added to HTML containing the validation messages.\n             * Useful for rendering NOT_CONFIGURED in a special way.\n             *\n             * @returns string of additional css classes (or empty string)\n             */\n            getAdditionalClasses: function() {\n                if (this.root && this.model.get('summary').type === this.model.NOT_CONFIGURED &&\n                    this.model.get('messages').length === 0) {\n                    return 'no-container-content';\n                }\n                return '';\n            }\n        });\n\n        return XBlockValidationView;\n    });\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/xblock_validation.js","(function() { module.exports = window[\"jQuery\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 0\n// module chunks = 3 4 5 6 9 10 11 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 84","(function() { module.exports = window[\"_\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"_\"\n// module id = 1\n// module chunks = 3 4 5 6 9 10 11 14 15 16 18 19 20 21 23 24 25 26 27 28 29 30 31 34 35 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75","(function() { module.exports = window[\"Backbone\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Backbone\"\n// module id = 2\n// module chunks = 3 5 6 9 10 11 14 15 20 21 23 24 33 85","(function() { module.exports = window[\"gettext\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"gettext\"\n// module id = 3\n// module chunks = 5 6 10 14 15 16 20 21 24"],"sourceRoot":""}