{"version":3,"sources":["webpack:///./cms/static/js/collections/component_template.js?3735","webpack:///./cms/static/js/factories/container.js","webpack:///./cms/static/js/models/component_template.js?e629","webpack:///./cms/static/js/models/custom_sync_xblock_info.js","webpack:///./cms/static/js/models/xblock_container_info.js","webpack:///./cms/static/js/views/components/add_xblock.js?0587","webpack:///./cms/static/js/views/components/add_xblock_button.js?eb40","webpack:///./cms/static/js/views/components/add_xblock_menu.js?a272","webpack:///./cms/static/js/views/container.js?4635","webpack:///./cms/static/js/views/modals/move_xblock_modal.js?577f","webpack:///./cms/static/js/views/move_xblock_breadcrumb.js?1597","webpack:///./cms/static/js/views/move_xblock_list.js?42ed","webpack:///./cms/static/js/views/pages/base_page.js?5773","webpack:///./cms/static/js/views/pages/container.js?168c","webpack:///./cms/static/js/views/pages/container_subviews.js?194d","webpack:///./cms/static/js/views/unit_outline.js?f295","webpack:///./cms/static/js/views/unit_outline_child.js?b916","webpack:///./cms/static/js/views/utils/move_xblock_utils.js?e6d9","webpack:///./cms/static/js/views/xblock_access_editor.js?5c9c","webpack:///./cms/static/js/views/xblock_outline.js?1b77","webpack:///./cms/static/js/views/xblock_string_field_editor.js?9089","webpack:///./cms/templates/js/move-xblock-breadcrumb.underscore?7104","webpack:///./cms/templates/js/move-xblock-list.underscore?2c7f","webpack:///./cms/templates/js/move-xblock-modal.underscore?ca42","webpack:///./common/static/common/js/components/views/feedback_alert.js?8780","webpack:///external \"jQuery\"?0cb8***","webpack:///external \"_\"?b3b9***","webpack:///external \"Backbone\"?709d**","webpack:///external \"gettext\"?8b52","webpack:///external \"URI\"?d4c3"],"names":["Backbone","ComponentTemplate","Collection","extend","model","ContainerFactory","componentTemplates","XBlockInfoJson","action","options","main_options","el","$","parse","templates","xmoduleLoader","view","render","Model","defaults","type","support_legend","response","isPrimaryBlankTemplate","template","boilerplate_name","category","display_name","sort","a","b","hinted","XBlockInfo","CustomSyncXBlockInfo","sync","method","url","urlRoots","urlRoot","get","prototype","call","XBlockContainerInfo","read","_","gettext","BaseView","ViewUtils","AddXBlockButton","AddXBlockMenu","AddXBlockComponent","events","initialize","loadTemplate","$el","html","that","collection","each","componentModel","menu","find","append","showComponentTemplates","event","preventDefault","stopPropagation","currentTarget","data","slideUp","slideDown","focus","closeNewComponent","createNewComponent","self","$element","saveData","oldOffset","getScrollOffset","runOperationShowingMessage","bind","createComponent","always","setScrollOffset","tagName","HtmlUtils","className","template_name","support_indicator_template","support_legend_template","setHtml","HTML","tabs","XBlockView","ModuleUtils","NotificationView","studioXBlockWrapperClass","ContainerView","requestToken","new_child_view","xblockReady","reorderableClass","reorderableContainer","newParent","oldParent","first","makeRequestSpecificSelector","sortable","handle","start","stop","saving","hideSaving","removeFromParent","isUndefined","Mini","title","show","hide","updateChildren","undefined","update","ui","parent","target","closest","sender","helper","opacity","placeholder","forcePlaceholderSize","axis","items","connectWith","tolerance","targetParent","successCallback","children","childLocators","xblockInfo","filter","map","child","ajax","getUpdateUrl","dataType","contentType","JSON","stringify","success","fetch","acknowledgeXBlockDeletion","locator","notifyRuntime","refresh","sortableInitializedClass","selector","XBlockViewUtils","MoveXBlockUtils","StringUtils","Feedback","XBlockInfoModel","BaseModal","MoveXBlockListView","MoveXBlockBreadcrumbView","MoveXblockModalTemplate","MoveXblockModal","modalName","modalSize","showEditorModeButtons","addPrimaryActionButton","primaryActionButtonType","viewSpecificClasses","primaryActionButtonTitle","modalSRTitle","sourceXBlockInfo","sourceParentXBlockInfo","targetParentXBlockInfo","XBlockURLRoot","XBlockAncestorInfoURL","interpolate","usageId","outlineURL","getTitle","fetchCourseOutline","done","courseOutlineInfo","ancestorInfo","addClass","removeClass","renderViews","listenTo","focusModal","enableMoveOperation","displayName","getContentHtml","apply","updateMoveState","hideMovedNotification","moveXBlockListView","remove","moveXBlockBreadcrumbView","outFocus","resize","inFocus","modalWindowClass","when","fetchData","deferred","Deferred","resolve","fail","reject","promise","isValidMove","$moveButton","isValidCategory","basicBlockTypes","sourceParentType","targetParentType","sourceParentHasChildren","targetParentHasChildren","contains","id","moveXBlock","sourceXBlockElement","sourceDisplayName","sourceLocator","sourceParentLocator","targetParentLocator","MoveXBlockBreadcrumbViewTemplate","MoveXBlockBreadcrumb","View","trigger","handleBreadcrumbButtonPress","XBlockUtils","MoveXBlockListViewTemplate","XBlockListView","parentInfo","childrenInfo","visitedAncestors","categoryRelationMap","course","section","subsection","unit","categoriesText","component","group","renderXBlockInfo","sourceXBlockId","xblocks","noChildText","getNoChildText","categoryText","getCategoryText","parentDisplayname","XBlocksCategory","currentLocationIndex","getCurrentLocationIndex","breadcrumbInfo","renderChildren","newParentIndex","direction","splice","push","setDisplayedXBlocksCategories","childCategory","getXBlockType","keys","xblock","index","ancestors","ancestor","parentCategory","toLowerCase","breadcrumbs","BasePage","hasContent","renderPage","EditXBlockModal","MoveXBlockModal","XBlockStringFieldEditor","XBlockAccessEditor","ContainerSubviews","UnitOutlineView","XBlockContainerPage","collapsedClass","canEdit","defaultViewClass","components_on_init","viewClass","isLibraryPage","attributes","nameEditor","accessEditor","click","xblockView","getXBlockView","messageView","MessageView","containerAccessView","ContainerAccess","xblockPublisher","Publisher","publishHistory","PublishHistory","viewLiveActions","ViewLiveButtonController","unitOutlineView","onXBlockMoved","getViewParameters","loadingElement","unitLocationTree","hiddenCss","renderAddXBlockComponents","onXBlockRefresh","delegateEvents","block_added","findXBlockElement","getURLRoot","is_duplicate","element","editXBlock","xblockElement","modal","edit","readOnlyView","refreshXBlock","editVisibilitySettings","titleFormat","duplicateXBlock","duplicateComponent","showMoveXBlockModal","parentXBlockElement","parents","findXBlockInfo","deleteXBlock","deleteComponent","createPlaceholderElement","class","parentElement","parentLocator","buttonPanel","listPanel","prev","scrollOffset","$placeholderEl","requestData","parent_locator","placeholderElement","appendTo","postJSON","onNewXBlock","insertAfter","onDelete","rootLocator","length","hasClass","refreshChildXBlock","TemporaryXBlockView","temporaryView","updateHtml","replaceAll","unbind","initRuntimeData","scrollToNewComponentButtons","scrollTo","duration","disabledCss","ContainerStateListenerView","on","onSync","shouldRefresh","hasChangedAttributes","hasPartitionGroupComponents","userPartitionInfo","currentlyVisibleToStudents","viewLiveAction","attr","visibilityState","visibilityClass","getXBlockVisibilityClass","hasChanges","editedOn","editedBy","published","publishedOn","publishedBy","released","releaseDate","releaseDateFrom","hasExplicitStaffLock","staffLockFrom","window","publish","e","save","patch","set","discardChanges","confirmThenRunOperation","toggleStaffLock","enableStaffLock","hasInheritedStaffLock","saveAndPublishStaffLock","revertCheckBox","checkStaffLock","metadata","visible_to_staff_only","check","published_on","published_by","XBlockOutlineView","UnitOutlineChildView","templateName","renderAncestors","i","listElement","ancestorView","previousAncestor","getListElement","createChildView","parentView","currentUnitId","getChildViewClass","getTemplateContext","childInfo","AlertView","redirectLink","undoMoveXBlock","showMovedNotification","link","location","href","targetIndex","source_index","movedAlertView","Confirmation","actions","primary","text","secondary","smoothScroll","offset","easing","speed","active_alert","initialState","expandedLocators","renderedChildren","renderTemplate","addButtonActions","addNameEditor","add","shouldRenderChildren","shouldExpandChildren","setElement","xblockType","xblockTypeDisplayName","parentType","addChildName","defaultNewChildName","isCollapsed","component_type","typeListClass","getXBlockListTypeClass","childType","addChildLabel","includesChildren","staffOnlyMessage","childOutlineView","addChildView","childView","xblockField","XBlockOutlineFieldEditor","toggleExpandCollapse","wasExpanded","ensureChildrenRendered","handleDeleteEvent","handleDuplicateEvent","handleAddEvent","onXBlockChange","oldElement","viewState","replaceWith","setViewState","locatorToShow","locator_to_show","scroll_offset","editDisplayName","edit_display_name","locatorElement","console","error","onChildAdded","onUnitAdded","redirect","onChildDeleted","getParentElement","xblockMap","parentXblockType","onChildDuplicated","$target","addXBlock","fieldName","fieldDisplayName","onChangeField","value","escape","getLabel","getInput","onInputFocusLost","currentValue","val","hideInput","onClickSubmit","updateField","onClickCancel","cancelInput","onClickEditor","showInput","input","select","newValue","trim","oldValue","updateXBlockField","handleKeyUp","keyCode","str","SystemFeedbackView","Alert","slide_speed","arguments","setTimeout","slideSpeed","capitalCamel","intents","compose","capitalize","camelize","intent","subclass"],"mappings":"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","file":"js/factories/container.js","sourcesContent":["define(['backbone', 'js/models/component_template'], function(Backbone, ComponentTemplate) {\n    return Backbone.Collection.extend({\n        model: ComponentTemplate\n    });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/collections/component_template.js","import * as $ from 'jquery';\nimport * as _ from 'underscore';\nimport * as XBlockContainerInfo from 'js/models/xblock_container_info';\nimport * as ContainerPage from 'js/views/pages/container';\nimport * as ComponentTemplates from 'js/collections/component_template';\nimport * as xmoduleLoader from 'xmodule';\nimport './base';\nimport 'cms/js/main';\nimport 'xblock/cms.runtime.v1';\n\n'use strict';\nexport default function ContainerFactory(componentTemplates, XBlockInfoJson, action, options) {\n    var main_options = {\n        el: $('#content'),\n        model: new XBlockContainerInfo(XBlockInfoJson, {parse: true}),\n        action: action,\n        templates: new ComponentTemplates(componentTemplates, {parse: true})\n    };\n\n    xmoduleLoader.done(function() {\n        var view = new ContainerPage(_.extend(main_options, options));\n        view.render();\n    });\n};\n\nexport {ContainerFactory}\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/factories/container.js","/**\n * Simple model for adding a component of a given type (for example, \"video\" or \"html\").\n */\ndefine(['backbone'], function(Backbone) {\n    return Backbone.Model.extend({\n        defaults: {\n            type: '',\n            // Each entry in the template array is an Object with the following keys:\n            // display_name\n            // category (may or may not match \"type\")\n            // boilerplate_name (may be null)\n            // is_common (only used for problems)\n            templates: [],\n            support_legend: {}\n        },\n        parse: function(response) {\n            // Returns true only for templates that both have no boilerplate and are of\n            // the overall type of the menu. This allows other component types to be added\n            // and they will get sorted alphabetically rather than just at the top.\n            // e.g. The ORA openassessment xblock is listed as an advanced problem.\n            var isPrimaryBlankTemplate = function(template) {\n                return !template.boilerplate_name && template.category === response.type;\n            };\n\n            this.type = response.type;\n            this.templates = response.templates;\n            this.display_name = response.display_name;\n            this.support_legend = response.support_legend;\n\n            // Sort the templates.\n            this.templates.sort(function(a, b) {\n                // The blank problem for the current type goes first\n                if (isPrimaryBlankTemplate(a)) {\n                    return -1;\n                } else if (isPrimaryBlankTemplate(b)) {\n                    return 1;\n                // Hinted problems should be shown at the end\n                } else if (a.hinted && !b.hinted) {\n                    return 1;\n                } else if (!a.hinted && b.hinted) {\n                    return -1;\n                } else if (a.display_name > b.display_name) {\n                    return 1;\n                } else if (a.display_name < b.display_name) {\n                    return -1;\n                }\n                return 0;\n            });\n        }\n    });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/models/component_template.js","define(['js/models/xblock_info'],\n    function(XBlockInfo) {\n        var CustomSyncXBlockInfo = XBlockInfo.extend({\n            sync: function(method, model, options) {\n                options.url = (this.urlRoots[method] || this.urlRoot) + '/' + this.get('id');\n                return XBlockInfo.prototype.sync.call(this, method, model, options);\n            }\n        });\n        return CustomSyncXBlockInfo;\n    });\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/models/custom_sync_xblock_info.js","define(['js/models/custom_sync_xblock_info'],\n    function(CustomSyncXBlockInfo) {\n        var XBlockContainerInfo = CustomSyncXBlockInfo.extend({\n            urlRoots: {\n                read: '/xblock/container'\n            }\n        });\n        return XBlockContainerInfo;\n    });\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/models/xblock_container_info.js","/**\n * This is a simple component that renders add buttons for all available XBlock template types.\n */\ndefine(['jquery', 'underscore', 'gettext', 'js/views/baseview', 'common/js/components/utils/view_utils',\n    'js/views/components/add_xblock_button', 'js/views/components/add_xblock_menu'],\n    function($, _, gettext, BaseView, ViewUtils, AddXBlockButton, AddXBlockMenu) {\n        var AddXBlockComponent = BaseView.extend({\n            events: {\n                'click .new-component .new-component-type .multiple-templates': 'showComponentTemplates',\n                'click .new-component .new-component-type .single-template': 'createNewComponent',\n                'click .new-component .cancel-button': 'closeNewComponent',\n                'click .new-component-templates .new-component-template .button-component': 'createNewComponent',\n                'click .new-component-templates .cancel-button': 'closeNewComponent'\n            },\n\n            initialize: function(options) {\n                BaseView.prototype.initialize.call(this, options);\n                this.template = this.loadTemplate('add-xblock-component');\n            },\n\n            render: function() {\n                if (!this.$el.html()) {\n                    var that = this;\n                    this.$el.html(this.template({}));\n                    this.collection.each(\n                        function(componentModel) {\n                            var view, menu;\n\n                            view = new AddXBlockButton({model: componentModel});\n                            that.$el.find('.new-component-type').append(view.render().el);\n\n                            menu = new AddXBlockMenu({model: componentModel});\n                            that.$el.append(menu.render().el);\n                        }\n                    );\n                }\n            },\n\n            showComponentTemplates: function(event) {\n                var type;\n                event.preventDefault();\n                event.stopPropagation();\n                type = $(event.currentTarget).data('type');\n                this.$('.new-component').slideUp(250);\n                this.$('.new-component-' + type).slideDown(250);\n                this.$('.new-component-' + type + ' div').focus();\n            },\n\n            closeNewComponent: function(event) {\n                event.preventDefault();\n                event.stopPropagation();\n                type = $(event.currentTarget).data('type');\n                this.$('.new-component').slideDown(250);\n                this.$('.new-component-templates').slideUp(250);\n                this.$('ul.new-component-type li button[data-type=' + type + ']').focus();\n            },\n\n            createNewComponent: function(event) {\n                var self = this,\n                    $element = $(event.currentTarget),\n                    saveData = $element.data(),\n                    oldOffset = ViewUtils.getScrollOffset(this.$el);\n                event.preventDefault();\n                this.closeNewComponent(event);\n                ViewUtils.runOperationShowingMessage(\n                    gettext('Adding'),\n                    _.bind(this.options.createComponent, this, saveData, $element)\n                ).always(function() {\n                    // Restore the scroll position of the buttons so that the new\n                    // component appears above them.\n                    ViewUtils.setScrollOffset(self.$el, oldOffset);\n                });\n            }\n        });\n\n        return AddXBlockComponent;\n    }); // end define();\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/components/add_xblock.js","define(['js/views/baseview'],\n    function(BaseView) {\n        return BaseView.extend({\n            tagName: 'li',\n            initialize: function() {\n                BaseView.prototype.initialize.call(this);\n                this.template = this.loadTemplate('add-xblock-component-button');\n                this.$el.html(\n                    this.template({\n                        type: this.model.type,\n                        templates: this.model.templates,\n                        display_name: this.model.display_name\n                    })\n                );\n            }\n        });\n    }); // end define();\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/components/add_xblock_button.js","define(['jquery', 'js/views/baseview', 'edx-ui-toolkit/js/utils/html-utils'],\n    function($, BaseView, HtmlUtils) {\n        return BaseView.extend({\n            className: function() {\n                return 'new-component-templates new-component-' + this.model.type;\n            },\n            initialize: function() {\n                BaseView.prototype.initialize.call(this);\n                var template_name = this.model.type === 'problem' ? 'add-xblock-component-menu-problem' :\n                    'add-xblock-component-menu';\n                var support_indicator_template = this.loadTemplate('add-xblock-component-support-level');\n                var support_legend_template = this.loadTemplate('add-xblock-component-support-legend');\n                this.template = this.loadTemplate(template_name);\n                HtmlUtils.setHtml(\n                    this.$el,\n                    HtmlUtils.HTML(this.template({\n                        type: this.model.type, templates: this.model.templates,\n                        support_legend: this.model.support_legend,\n                        support_indicator_template: support_indicator_template,\n                        support_legend_template: support_legend_template,\n                        HtmlUtils: HtmlUtils\n                    }))\n                );\n                // Make the tabs on problems into \"real tabs\"\n                this.$('.tab-group').tabs();\n            }\n        });\n    }); // end define();\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/components/add_xblock_menu.js","define([\n    'jquery', 'underscore', 'js/views/xblock', 'js/utils/module',\n    'gettext', 'common/js/components/views/feedback_notification',\n    'jquery.ui'\n], // The container view uses sortable, which is provided by jquery.ui.\n    function($, _, XBlockView, ModuleUtils, gettext, NotificationView) {\n        'use strict';\n\n        var studioXBlockWrapperClass = '.studio-xblock-wrapper';\n\n        var ContainerView = XBlockView.extend({\n            // Store the request token of the first xblock on the page (which we know was rendered by Studio when\n            // the page was generated). Use that request token to filter out user-defined HTML in any\n            // child xblocks within the page.\n            requestToken: '',\n\n            new_child_view: 'reorderable_container_child_preview',\n\n            xblockReady: function() {\n                var reorderableClass, reorderableContainer,\n                    newParent, oldParent,\n                    self = this;\n                XBlockView.prototype.xblockReady.call(this);\n\n                this.requestToken = this.$('div.xblock').first().data('request-token');\n                reorderableClass = this.makeRequestSpecificSelector('.reorderable-container');\n\n                reorderableContainer = this.$(reorderableClass);\n                reorderableContainer.sortable({\n                    handle: '.drag-handle',\n\n                    start: function() {\n                        // Necessary because of an open bug in JQuery sortable.\n                        // http://bugs.jqueryui.com/ticket/4990\n                        reorderableContainer.sortable('refreshPositions');\n                    },\n\n                    stop: function() {\n                        var saving, hideSaving, removeFromParent;\n\n                        if (_.isUndefined(oldParent)) {\n                            // If no actual change occurred,\n                            // oldParent will never have been set.\n                            return;\n                        }\n\n                        saving = new NotificationView.Mini({\n                            title: gettext('Saving')\n                        });\n                        saving.show();\n\n                        hideSaving = function() {\n                            saving.hide();\n                        };\n\n                        // If moving from one container to another,\n                        // add to new container before deleting from old to\n                        // avoid creating an orphan if the addition fails.\n                        if (newParent) {\n                            removeFromParent = oldParent;\n                            self.updateChildren(newParent, function() {\n                                self.updateChildren(removeFromParent, hideSaving);\n                            });\n                        } else {\n                            // No new parent, only reordering within same container.\n                            self.updateChildren(oldParent, hideSaving);\n                        }\n\n                        oldParent = undefined;\n                        newParent = undefined;\n                    },\n                    update: function(event, ui) {\n                        // When dragging from one ol to another, this method\n                        // will be called twice (once for each list). ui.sender will\n                        // be null if the change is related to the list the element\n                        // was originally in (the case of a move within the same container\n                        // or the deletion from a container when moving to a new container).\n                        var parent = $(event.target).closest(studioXBlockWrapperClass);\n                        if (ui.sender) {\n                            // Move to a new container (the addition part).\n                            newParent = parent;\n                        } else {\n                            // Reorder inside a container, or deletion when moving to new container.\n                            oldParent = parent;\n                        }\n                    },\n                    helper: 'original',\n                    opacity: '0.5',\n                    placeholder: 'component-placeholder',\n                    forcePlaceholderSize: true,\n                    axis: 'y',\n                    items: '> .is-draggable',\n                    connectWith: reorderableClass,\n                    tolerance: 'pointer'\n\n                });\n            },\n\n            updateChildren: function(targetParent, successCallback) {\n                var children, childLocators,\n                    xblockInfo = this.model;\n\n                // Find descendants with class \"studio-xblock-wrapper\" whose parent === targetParent.\n                // This is necessary to filter our grandchildren, great-grandchildren, etc.\n                children = targetParent.find(studioXBlockWrapperClass).filter(function() {\n                    var parent = $(this).parent().closest(studioXBlockWrapperClass);\n                    return parent.data('locator') === targetParent.data('locator');\n                });\n\n                childLocators = _.map(\n                    children,\n                    function(child) {\n                        return $(child).data('locator');\n                    }\n                );\n                $.ajax({\n                    url: ModuleUtils.getUpdateUrl(targetParent.data('locator')),\n                    type: 'PUT',\n                    dataType: 'json',\n                    contentType: 'application/json',\n                    data: JSON.stringify({\n                        children: childLocators\n                    }),\n                    success: function() {\n                        // change data-parent on the element moved.\n                        if (successCallback) {\n                            successCallback();\n                        }\n                        // Update publish and last modified information from the server.\n                        xblockInfo.fetch();\n                    }\n                });\n            },\n\n            acknowledgeXBlockDeletion: function(locator) {\n                this.notifyRuntime('deleted-child', locator);\n            },\n\n            refresh: function() {\n                var sortableInitializedClass = this.makeRequestSpecificSelector('.reorderable-container.ui-sortable');\n                this.$(sortableInitializedClass).sortable('refresh');\n            },\n\n            makeRequestSpecificSelector: function(selector) {\n                return 'div.xblock[data-request-token=\"' + this.requestToken + '\"] > ' + selector;\n            }\n        });\n\n        return ContainerView;\n    }); // end define();\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/container.js","/**\n * The MoveXblockModal to move XBlocks in course.\n */\ndefine([\n    'jquery',\n    'backbone',\n    'underscore',\n    'gettext',\n    'js/views/baseview',\n    'js/views/utils/xblock_utils',\n    'js/views/utils/move_xblock_utils',\n    'edx-ui-toolkit/js/utils/html-utils',\n    'edx-ui-toolkit/js/utils/string-utils',\n    'common/js/components/views/feedback',\n    'js/models/xblock_info',\n    'js/views/modals/base_modal',\n    'js/views/move_xblock_list',\n    'js/views/move_xblock_breadcrumb',\n    'templates/move-xblock-modal.underscore'\n],\nfunction($, Backbone, _, gettext, BaseView, XBlockViewUtils, MoveXBlockUtils, HtmlUtils, StringUtils, Feedback,\n         XBlockInfoModel, BaseModal, MoveXBlockListView, MoveXBlockBreadcrumbView, MoveXblockModalTemplate) {\n    'use strict';\n\n    var MoveXblockModal = BaseModal.extend({\n        events: _.extend({}, BaseModal.prototype.events, {\n            'click .action-move:not(.is-disabled)': 'moveXBlock'\n        }),\n\n        options: $.extend({}, BaseModal.prototype.options, {\n            modalName: 'move-xblock',\n            modalSize: 'lg',\n            showEditorModeButtons: false,\n            addPrimaryActionButton: true,\n            primaryActionButtonType: 'move',\n            viewSpecificClasses: 'move-modal',\n            primaryActionButtonTitle: gettext('Move'),\n            modalSRTitle: gettext('Choose a location to move your component to')\n        }),\n\n        initialize: function() {\n            var self = this;\n            BaseModal.prototype.initialize.call(this);\n            this.sourceXBlockInfo = this.options.sourceXBlockInfo;\n            this.sourceParentXBlockInfo = this.options.sourceParentXBlockInfo;\n            this.targetParentXBlockInfo = null;\n            this.XBlockURLRoot = this.options.XBlockURLRoot;\n            this.XBlockAncestorInfoURL = StringUtils.interpolate(\n                '{urlRoot}/{usageId}?fields=ancestorInfo',\n                {urlRoot: this.XBlockURLRoot, usageId: this.sourceXBlockInfo.get('id')}\n            );\n            this.outlineURL = this.options.outlineURL;\n            this.options.title = this.getTitle();\n            this.fetchCourseOutline().done(function(courseOutlineInfo, ancestorInfo) {\n                $('.ui-loading').addClass('is-hidden');\n                $('.breadcrumb-container').removeClass('is-hidden');\n                self.renderViews(courseOutlineInfo, ancestorInfo);\n            });\n            this.listenTo(Backbone, 'move:breadcrumbRendered', this.focusModal);\n            this.listenTo(Backbone, 'move:enableMoveOperation', this.enableMoveOperation);\n            this.listenTo(Backbone, 'move:hideMoveModal', this.hide);\n        },\n\n        getTitle: function() {\n            return StringUtils.interpolate(\n                gettext('Move: {displayName}'),\n                {displayName: this.sourceXBlockInfo.get('display_name')}\n            );\n        },\n\n        getContentHtml: function() {\n            return _.template(MoveXblockModalTemplate)({});\n        },\n\n        show: function() {\n            BaseModal.prototype.show.apply(this, [false]);\n            this.updateMoveState(false);\n            MoveXBlockUtils.hideMovedNotification();\n        },\n\n        hide: function() {\n            if (this.moveXBlockListView) {\n                this.moveXBlockListView.remove();\n            }\n            if (this.moveXBlockBreadcrumbView) {\n                this.moveXBlockBreadcrumbView.remove();\n            }\n            BaseModal.prototype.hide.apply(this);\n            Feedback.prototype.outFocus.apply(this);\n        },\n\n        resize: function() {\n            // Do Nothing. Overridden to use our own styling instead of one provided by base modal\n        },\n\n        focusModal: function() {\n            Feedback.prototype.inFocus.apply(this, [this.options.modalWindowClass]);\n            $(this.options.modalWindowClass).focus();\n        },\n\n        fetchCourseOutline: function() {\n            return $.when(\n                this.fetchData(this.outlineURL),\n                this.fetchData(this.XBlockAncestorInfoURL)\n            );\n        },\n\n        fetchData: function(url) {\n            var deferred = $.Deferred();\n            $.ajax({\n                url: url,\n                contentType: 'application/json',\n                dataType: 'json',\n                type: 'GET'\n            }).done(function(data) {\n                deferred.resolve(data);\n            }).fail(function() {\n                deferred.reject();\n            });\n            return deferred.promise();\n        },\n\n        renderViews: function(courseOutlineInfo, ancestorInfo) {\n            this.moveXBlockBreadcrumbView = new MoveXBlockBreadcrumbView({});\n            this.moveXBlockListView = new MoveXBlockListView(\n                {\n                    model: new XBlockInfoModel(courseOutlineInfo, {parse: true}),\n                    sourceXBlockInfo: this.sourceXBlockInfo,\n                    ancestorInfo: ancestorInfo\n                }\n            );\n        },\n\n        updateMoveState: function(isValidMove) {\n            var $moveButton = this.$el.find('.action-move');\n            if (isValidMove) {\n                $moveButton.removeClass('is-disabled');\n            } else {\n                $moveButton.addClass('is-disabled');\n            }\n        },\n\n        isValidCategory: function(targetParentXBlockInfo) {\n            var basicBlockTypes = ['course', 'chapter', 'sequential', 'vertical'],\n                sourceParentType = this.sourceParentXBlockInfo.get('category'),\n                targetParentType = targetParentXBlockInfo.get('category'),\n                sourceParentHasChildren = this.sourceParentXBlockInfo.get('has_children'),\n                targetParentHasChildren = targetParentXBlockInfo.get('has_children');\n\n            // Treat source parent component as vertical to support move child components under content experiment\n            // and other similar xblocks.\n            if (sourceParentHasChildren && !_.contains(basicBlockTypes, sourceParentType)) {\n                sourceParentType = 'vertical';  // eslint-disable-line no-param-reassign\n            }\n\n            // Treat target parent component as a vertical to support move to parentable target parent components.\n            // Also, moving a component directly to content experiment is not allowed, we need to visit to group level.\n            if (targetParentHasChildren && !_.contains(basicBlockTypes, targetParentType) &&\n                targetParentType !== 'split_test') {\n                targetParentType = 'vertical';  // eslint-disable-line no-param-reassign\n            }\n            return targetParentType === sourceParentType;\n        },\n\n        enableMoveOperation: function(targetParentXBlockInfo) {\n            var isValidMove = false;\n\n            // update target parent on navigation\n            this.targetParentXBlockInfo = targetParentXBlockInfo;\n            if (this.isValidCategory(targetParentXBlockInfo) &&\n                this.sourceParentXBlockInfo.id !== targetParentXBlockInfo.id && // same parent case\n                this.sourceXBlockInfo.id !== targetParentXBlockInfo.id) { // same source item case\n                isValidMove = true;\n            }\n            this.updateMoveState(isValidMove);\n        },\n\n        moveXBlock: function() {\n            MoveXBlockUtils.moveXBlock(\n                {\n                    sourceXBlockElement: $(\"li.studio-xblock-wrapper[data-locator='\" + this.sourceXBlockInfo.id + \"']\"),\n                    sourceDisplayName: this.sourceXBlockInfo.get('display_name'),\n                    sourceLocator: this.sourceXBlockInfo.id,\n                    sourceParentLocator: this.sourceParentXBlockInfo.id,\n                    targetParentLocator: this.targetParentXBlockInfo.id\n                }\n            );\n        }\n    });\n\n    return MoveXblockModal;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/modals/move_xblock_modal.js","/**\n * MoveXBlockBreadcrumb show breadcrumbs to move back to parent.\n */\ndefine([\n    'jquery', 'backbone', 'underscore', 'gettext',\n    'edx-ui-toolkit/js/utils/html-utils',\n    'edx-ui-toolkit/js/utils/string-utils',\n    'templates/move-xblock-breadcrumb.underscore'\n],\nfunction($, Backbone, _, gettext, HtmlUtils, StringUtils, MoveXBlockBreadcrumbViewTemplate) {\n    'use strict';\n\n    var MoveXBlockBreadcrumb = Backbone.View.extend({\n        el: '.breadcrumb-container',\n\n        events: {\n            'click .parent-nav-button': 'handleBreadcrumbButtonPress'\n        },\n\n        initialize: function() {\n            this.template = HtmlUtils.template(MoveXBlockBreadcrumbViewTemplate);\n            this.listenTo(Backbone, 'move:childrenRendered', this.render);\n        },\n\n        render: function(options) {\n            HtmlUtils.setHtml(\n                this.$el,\n                this.template(options)\n            );\n            Backbone.trigger('move:breadcrumbRendered');\n            return this;\n        },\n\n        /**\n         * Event handler for breadcrumb button press.\n         *\n         * @param {Object} event\n         */\n        handleBreadcrumbButtonPress: function(event) {\n            Backbone.trigger(\n                'move:breadcrumbButtonPressed',\n                $(event.target).data('parentIndex')\n            );\n        }\n    });\n\n    return MoveXBlockBreadcrumb;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/move_xblock_breadcrumb.js","/**\n * XBlockListView shows list of XBlocks in a particular category(section, subsection, vertical etc).\n */\ndefine([\n    'jquery', 'backbone', 'underscore', 'gettext',\n    'edx-ui-toolkit/js/utils/html-utils',\n    'edx-ui-toolkit/js/utils/string-utils',\n    'js/views/utils/xblock_utils',\n    'templates/move-xblock-list.underscore'\n],\nfunction($, Backbone, _, gettext, HtmlUtils, StringUtils, XBlockUtils, MoveXBlockListViewTemplate) {\n    'use strict';\n\n    var XBlockListView = Backbone.View.extend({\n        el: '.xblock-list-container',\n\n        // parent info of currently displayed children\n        parentInfo: {},\n        // currently displayed children XBlocks info\n        childrenInfo: {},\n        // list of visited parent XBlocks, needed for backward navigation\n        visitedAncestors: null,\n\n        // parent to child relation map\n        categoryRelationMap: {\n            course: 'section',\n            section: 'subsection',\n            subsection: 'unit',\n            unit: 'component'\n        },\n\n        categoriesText: {\n            section: gettext('Sections'),\n            subsection: gettext('Subsections'),\n            unit: gettext('Units'),\n            component: gettext('Components'),\n            group: gettext('Groups')\n        },\n\n        events: {\n            'click .button-forward': 'renderChildren'\n        },\n\n        initialize: function(options) {\n            this.visitedAncestors = [];\n            this.template = HtmlUtils.template(MoveXBlockListViewTemplate);\n            this.sourceXBlockInfo = options.sourceXBlockInfo;\n            this.ancestorInfo = options.ancestorInfo;\n            this.listenTo(Backbone, 'move:breadcrumbButtonPressed', this.handleBreadcrumbButtonPress);\n            this.renderXBlockInfo();\n        },\n\n        render: function() {\n            HtmlUtils.setHtml(\n                this.$el,\n                this.template(\n                    {\n                        sourceXBlockId: this.sourceXBlockInfo.id,\n                        xblocks: this.childrenInfo.children,\n                        noChildText: this.getNoChildText(),\n                        categoryText: this.getCategoryText(),\n                        parentDisplayname: this.parentInfo.parent.get('display_name'),\n                        XBlocksCategory: this.childrenInfo.category,\n                        currentLocationIndex: this.getCurrentLocationIndex()\n                    }\n                )\n            );\n            Backbone.trigger('move:childrenRendered', this.breadcrumbInfo());\n            Backbone.trigger('move:enableMoveOperation', this.parentInfo.parent);\n            return this;\n        },\n\n        /**\n         * Forward button press handler. This will render all the childs of an XBlock.\n         *\n         * @param {Object} event\n         */\n        renderChildren: function(event) {\n            this.renderXBlockInfo(\n                'forward',\n                $(event.target).closest('.xblock-item').data('itemIndex')\n            );\n        },\n\n        /**\n         * Breadcrumb button press event handler. Render all the childs of an XBlock.\n         *\n         * @param {any} newParentIndex  Index of a parent XBlock\n         */\n        handleBreadcrumbButtonPress: function(newParentIndex) {\n            this.renderXBlockInfo('backward', newParentIndex);\n        },\n\n        /**\n         * Render XBlocks based on `forward` or `backward` navigation.\n         *\n         * @param {any} direction           `forward` or `backward`\n         * @param {any} newParentIndex      Index of a parent XBlock\n         */\n        renderXBlockInfo: function(direction, newParentIndex) {\n            if (direction === undefined) {\n                this.parentInfo.parent = this.model;\n            } else if (direction === 'forward') {\n                // clicked child is the new parent\n                this.parentInfo.parent = this.childrenInfo.children[newParentIndex];\n            } else if (direction === 'backward') {\n                // new parent will be one of visitedAncestors\n                this.parentInfo.parent = this.visitedAncestors[newParentIndex];\n                // remove visited ancestors\n                this.visitedAncestors.splice(newParentIndex);\n            }\n\n            this.visitedAncestors.push(this.parentInfo.parent);\n\n            if (this.parentInfo.parent.get('child_info')) {\n                this.childrenInfo.children = this.parentInfo.parent.get('child_info').children;\n            } else {\n                this.childrenInfo.children = [];\n            }\n\n            this.setDisplayedXBlocksCategories();\n            this.render();\n        },\n\n        /**\n         * Set parent and child XBlock categories.\n         */\n        setDisplayedXBlocksCategories: function() {\n            var childCategory = 'component';\n            this.parentInfo.category = XBlockUtils.getXBlockType(this.parentInfo.parent.get('category'));\n            if (!_.contains(_.keys(this.categoryRelationMap), this.parentInfo.category)) {\n                if (this.parentInfo.category === 'split_test') {\n                    childCategory = 'group';    // This is just to show groups text on group listing.\n                }\n                this.categoryRelationMap[this.parentInfo.category] = childCategory;\n            }\n            this.childrenInfo.category = this.categoryRelationMap[this.parentInfo.category];\n        },\n\n        /**\n         * Get index of source XBlock.\n         *\n         * @returns {any} Integer or undefined\n         */\n        getCurrentLocationIndex: function() {\n            var self = this,\n                currentLocationIndex;\n            _.each(self.childrenInfo.children, function(xblock, index) {\n                if (xblock.get('id') === self.sourceXBlockInfo.id) {\n                    currentLocationIndex = index;\n                } else {\n                    _.each(self.ancestorInfo.ancestors, function(ancestor) {\n                        if (ancestor.display_name === xblock.get('display_name') && ancestor.id === xblock.get('id')) {\n                            currentLocationIndex = index;\n                        }\n                    });\n                }\n            });\n\n            return currentLocationIndex;\n        },\n\n        /**\n         * Get category text for currently displayed children.\n         *\n         * @returns {String}\n         */\n        getCategoryText: function() {\n            return this.categoriesText[this.childrenInfo.category];\n        },\n\n        /**\n         * Get text when a parent XBlock has no children.\n         *\n         * @returns {String}\n         */\n        getNoChildText: function() {\n            return StringUtils.interpolate(\n                gettext('This {parentCategory} has no {childCategory}'),\n                {\n                    parentCategory: this.parentInfo.category,\n                    childCategory: this.categoriesText[this.childrenInfo.category].toLowerCase()\n                }\n            );\n        },\n\n        /**\n         * Construct breadcurmb info.\n         *\n         * @returns {Object}\n         */\n        breadcrumbInfo: function() {\n            return {\n                breadcrumbs: _.map(this.visitedAncestors, function(ancestor) {\n                    return ancestor.get('category') === 'course' ?\n                           gettext('Course Outline') : ancestor.get('display_name');\n                })\n            };\n        }\n    });\n\n    return XBlockListView;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/move_xblock_list.js","/**\n * This is the base view that all Studio pages extend from.\n */\ndefine(['jquery', 'js/views/baseview'],\n    function($, BaseView) {\n        var BasePage = BaseView.extend({\n\n            initialize: function() {\n                BaseView.prototype.initialize.call(this);\n            },\n\n            /**\n             * Returns true if this page is currently showing any content. If this returns false\n             * then the page will unhide the div with the class 'no-content'.\n             */\n            hasContent: function() {\n                return true;\n            },\n\n            /**\n             * This renders the page's content and returns a promise that will be resolved once\n             * the rendering has completed.\n             * @returns {jQuery promise} A promise representing the rendering of the page.\n             */\n            renderPage: function() {\n                return $.Deferred().resolve().promise();\n            },\n\n            /**\n             * Renders the current page while showing a loading indicator. Note that subclasses\n             * of BasePage should implement renderPage to perform the rendering of the content.\n             * If the page has no content (i.e. it returns false for hasContent) then the\n             * div with the class 'no-content' will be shown.\n             */\n            render: function() {\n                var self = this;\n                this.$('.ui-loading').removeClass('is-hidden');\n                this.renderPage().done(function() {\n                    if (!self.hasContent()) {\n                        self.$('.no-content').removeClass('is-hidden');\n                    }\n                }).always(function() {\n                    self.$('.ui-loading').addClass('is-hidden');\n                });\n                return this;\n            }\n        });\n\n        return BasePage;\n    }); // end define();\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/pages/base_page.js","/**\n * XBlockContainerPage is used to display Studio's container page for an xblock which has children.\n * This page allows the user to understand and manipulate the xblock and its children.\n */\ndefine(['jquery', 'underscore', 'backbone', 'gettext', 'js/views/pages/base_page',\n    'common/js/components/utils/view_utils', 'js/views/container', 'js/views/xblock',\n    'js/views/components/add_xblock', 'js/views/modals/edit_xblock', 'js/views/modals/move_xblock_modal',\n    'js/models/xblock_info', 'js/views/xblock_string_field_editor', 'js/views/xblock_access_editor',\n    'js/views/pages/container_subviews', 'js/views/unit_outline', 'js/views/utils/xblock_utils'],\n    function($, _, Backbone, gettext, BasePage, ViewUtils, ContainerView, XBlockView, AddXBlockComponent,\n          EditXBlockModal, MoveXBlockModal, XBlockInfo, XBlockStringFieldEditor, XBlockAccessEditor,\n          ContainerSubviews, UnitOutlineView, XBlockUtils) {\n        'use strict';\n        var XBlockContainerPage = BasePage.extend({\n            // takes XBlockInfo as a model\n\n            events: {\n                'click .edit-button': 'editXBlock',\n                'click .access-button': 'editVisibilitySettings',\n                'click .duplicate-button': 'duplicateXBlock',\n                'click .move-button': 'showMoveXBlockModal',\n                'click .delete-button': 'deleteXBlock',\n                'click .new-component-button': 'scrollToNewComponentButtons'\n            },\n\n            options: {\n                collapsedClass: 'is-collapsed',\n                canEdit: true // If not specified, assume user has permission to make changes\n            },\n\n            view: 'container_preview',\n\n            defaultViewClass: ContainerView,\n\n            // Overridable by subclasses-- determines whether the XBlock component\n            // addition menu is added on initialization. You may set this to false\n            // if your subclass handles it.\n            components_on_init: true,\n\n            initialize: function(options) {\n                BasePage.prototype.initialize.call(this, options);\n                this.viewClass = options.viewClass || this.defaultViewClass;\n                this.isLibraryPage = (this.model.attributes.category === 'library');\n                this.nameEditor = new XBlockStringFieldEditor({\n                    el: this.$('.wrapper-xblock-field'),\n                    model: this.model\n                });\n                this.nameEditor.render();\n                if (!this.isLibraryPage) {\n                    this.accessEditor = new XBlockAccessEditor({\n                        el: this.$('.wrapper-xblock-field')\n                    });\n                    this.accessEditor.render();\n                }\n                if (this.options.action === 'new') {\n                    this.nameEditor.$('.xblock-field-value-edit').click();\n                }\n                this.xblockView = this.getXBlockView();\n                this.messageView = new ContainerSubviews.MessageView({\n                    el: this.$('.container-message'),\n                    model: this.model\n                });\n                this.messageView.render();\n                // Display access message on units and split test components\n                if (!this.isLibraryPage) {\n                    this.containerAccessView = new ContainerSubviews.ContainerAccess({\n                        el: this.$('.container-access'),\n                        model: this.model\n                    });\n                    this.containerAccessView.render();\n\n                    this.xblockPublisher = new ContainerSubviews.Publisher({\n                        el: this.$('#publish-unit'),\n                        model: this.model,\n                        // When \"Discard Changes\" is clicked, the whole page must be re-rendered.\n                        renderPage: this.render\n                    });\n                    this.xblockPublisher.render();\n\n                    this.publishHistory = new ContainerSubviews.PublishHistory({\n                        el: this.$('#publish-history'),\n                        model: this.model\n                    });\n                    this.publishHistory.render();\n\n                    this.viewLiveActions = new ContainerSubviews.ViewLiveButtonController({\n                        el: this.$('.nav-actions'),\n                        model: this.model\n                    });\n                    this.viewLiveActions.render();\n\n                    this.unitOutlineView = new UnitOutlineView({\n                        el: this.$('.wrapper-unit-overview'),\n                        model: this.model\n                    });\n                    this.unitOutlineView.render();\n                }\n\n                this.listenTo(Backbone, 'move:onXBlockMoved', this.onXBlockMoved);\n            },\n\n            getViewParameters: function() {\n                return {\n                    el: this.$('.wrapper-xblock'),\n                    model: this.model,\n                    view: this.view\n                };\n            },\n\n            getXBlockView: function() {\n                return new this.viewClass(this.getViewParameters());\n            },\n\n            render: function(options) {\n                var self = this,\n                    xblockView = this.xblockView,\n                    loadingElement = this.$('.ui-loading'),\n                    unitLocationTree = this.$('.unit-location'),\n                    hiddenCss = 'is-hidden';\n\n                loadingElement.removeClass(hiddenCss);\n\n                // Hide both blocks until we know which one to show\n                xblockView.$el.addClass(hiddenCss);\n\n                // Render the xblock\n                xblockView.render({\n                    done: function() {\n                        // Show the xblock and hide the loading indicator\n                        xblockView.$el.removeClass(hiddenCss);\n                        loadingElement.addClass(hiddenCss);\n\n                        // Notify the runtime that the page has been successfully shown\n                        xblockView.notifyRuntime('page-shown', self);\n\n                        if (self.components_on_init) {\n                            // Render the add buttons. Paged containers should do this on their own.\n                            self.renderAddXBlockComponents();\n                        }\n\n                        // Refresh the views now that the xblock is visible\n                        self.onXBlockRefresh(xblockView);\n                        unitLocationTree.removeClass(hiddenCss);\n\n                        // Re-enable Backbone events for any updated DOM elements\n                        self.delegateEvents();\n                    },\n                    block_added: options && options.block_added\n                });\n            },\n\n            findXBlockElement: function(target) {\n                return $(target).closest('.studio-xblock-wrapper');\n            },\n\n            getURLRoot: function() {\n                return this.xblockView.model.urlRoot;\n            },\n\n            onXBlockRefresh: function(xblockView, block_added, is_duplicate) {\n                this.xblockView.refresh(xblockView, block_added, is_duplicate);\n                // Update publish and last modified information from the server.\n                this.model.fetch();\n            },\n\n            renderAddXBlockComponents: function() {\n                var self = this;\n                if (self.options.canEdit) {\n                    this.$('.add-xblock-component').each(function(index, element) {\n                        var component = new AddXBlockComponent({\n                            el: element,\n                            createComponent: _.bind(self.createComponent, self),\n                            collection: self.options.templates\n                        });\n                        component.render();\n                    });\n                } else {\n                    this.$('.add-xblock-component').remove();\n                }\n            },\n\n            editXBlock: function(event, options) {\n                var xblockElement = this.findXBlockElement(event.target),\n                    self = this,\n                    modal = new EditXBlockModal(options);\n                event.preventDefault();\n\n                modal.edit(xblockElement, this.model, {\n                    readOnlyView: !this.options.canEdit,\n                    refresh: function() {\n                        self.refreshXBlock(xblockElement, false);\n                    }\n                });\n            },\n\n            editVisibilitySettings: function(event) {\n                this.editXBlock(event, {\n                    view: 'visibility_view',\n                    // Translators: \"title\" is the name of the current component or unit being edited.\n                    titleFormat: gettext('Editing access for: %(title)s'),\n                    viewSpecificClasses: '',\n                    modalSize: 'med'\n                });\n            },\n\n            duplicateXBlock: function(event) {\n                event.preventDefault();\n                this.duplicateComponent(this.findXBlockElement(event.target));\n            },\n\n            showMoveXBlockModal: function(event) {\n                var xblockElement = this.findXBlockElement(event.target),\n                    parentXBlockElement = xblockElement.parents('.studio-xblock-wrapper'),\n                    modal = new MoveXBlockModal({\n                        sourceXBlockInfo: XBlockUtils.findXBlockInfo(xblockElement, this.model),\n                        sourceParentXBlockInfo: XBlockUtils.findXBlockInfo(parentXBlockElement, this.model),\n                        XBlockURLRoot: this.getURLRoot(),\n                        outlineURL: this.options.outlineURL\n                    });\n\n                event.preventDefault();\n                modal.show();\n            },\n\n            deleteXBlock: function(event) {\n                event.preventDefault();\n                this.deleteComponent(this.findXBlockElement(event.target));\n            },\n\n            createPlaceholderElement: function() {\n                return $('<div/>', {class: 'studio-xblock-wrapper'});\n            },\n\n            createComponent: function(template, target) {\n                // A placeholder element is created in the correct location for the new xblock\n                // and then onNewXBlock will replace it with a rendering of the xblock. Note that\n                // for xblocks that can't be replaced inline, the entire parent will be refreshed.\n                var parentElement = this.findXBlockElement(target),\n                    parentLocator = parentElement.data('locator'),\n                    buttonPanel = target.closest('.add-xblock-component'),\n                    listPanel = buttonPanel.prev(),\n                    scrollOffset = ViewUtils.getScrollOffset(buttonPanel),\n                    $placeholderEl = $(this.createPlaceholderElement()),\n                    requestData = _.extend(template, {\n                        parent_locator: parentLocator\n                    }),\n                    placeholderElement;\n                placeholderElement = $placeholderEl.appendTo(listPanel);\n                return $.postJSON(this.getURLRoot() + '/', requestData,\n                    _.bind(this.onNewXBlock, this, placeholderElement, scrollOffset, false))\n                    .fail(function() {\n                        // Remove the placeholder if the update failed\n                        placeholderElement.remove();\n                    });\n            },\n\n            duplicateComponent: function(xblockElement) {\n                // A placeholder element is created in the correct location for the duplicate xblock\n                // and then onNewXBlock will replace it with a rendering of the xblock. Note that\n                // for xblocks that can't be replaced inline, the entire parent will be refreshed.\n                var self = this,\n                    parentElement = self.findXBlockElement(xblockElement.parent()),\n                    scrollOffset = ViewUtils.getScrollOffset(xblockElement),\n                    $placeholderEl = $(self.createPlaceholderElement()),\n                    placeholderElement;\n\n                placeholderElement = $placeholderEl.insertAfter(xblockElement);\n                XBlockUtils.duplicateXBlock(xblockElement, parentElement)\n                    .done(function(data) {\n                        self.onNewXBlock(placeholderElement, scrollOffset, true, data);\n                    })\n                    .fail(function() {\n                        // Remove the placeholder if the update failed\n                        placeholderElement.remove();\n                    });\n            },\n\n            deleteComponent: function(xblockElement) {\n                var self = this,\n                    xblockInfo = new XBlockInfo({\n                        id: xblockElement.data('locator')\n                    });\n                XBlockUtils.deleteXBlock(xblockInfo).done(function() {\n                    self.onDelete(xblockElement);\n                });\n            },\n\n            onDelete: function(xblockElement) {\n                // get the parent so we can remove this component from its parent.\n                var xblockView = this.xblockView,\n                    parent = this.findXBlockElement(xblockElement.parent());\n                xblockElement.remove();\n\n                // Inform the runtime that the child has been deleted in case\n                // other views are listening to deletion events.\n                xblockView.acknowledgeXBlockDeletion(parent.data('locator'));\n\n                // Update publish and last modified information from the server.\n                this.model.fetch();\n            },\n\n            /*\n            After move operation is complete, updates the xblock information from server .\n             */\n            onXBlockMoved: function() {\n                this.model.fetch();\n            },\n\n            onNewXBlock: function(xblockElement, scrollOffset, is_duplicate, data) {\n                ViewUtils.setScrollOffset(xblockElement, scrollOffset);\n                xblockElement.data('locator', data.locator);\n                return this.refreshXBlock(xblockElement, true, is_duplicate);\n            },\n\n            /**\n             * Refreshes the specified xblock's display. If the xblock is an inline child of a\n             * reorderable container then the element will be refreshed inline. If not, then the\n             * parent container will be refreshed instead.\n             * @param element An element representing the xblock to be refreshed.\n             * @param block_added Flag to indicate that new block has been just added.\n             */\n            refreshXBlock: function(element, block_added, is_duplicate) {\n                var xblockElement = this.findXBlockElement(element),\n                    parentElement = xblockElement.parent(),\n                    rootLocator = this.xblockView.model.id;\n                if (xblockElement.length === 0 || xblockElement.data('locator') === rootLocator) {\n                    this.render({refresh: true, block_added: block_added});\n                } else if (parentElement.hasClass('reorderable-container')) {\n                    this.refreshChildXBlock(xblockElement, block_added, is_duplicate);\n                } else {\n                    this.refreshXBlock(this.findXBlockElement(parentElement));\n                }\n            },\n\n            /**\n             * Refresh an xblock element inline on the page, using the specified xblockInfo.\n             * Note that the element is removed and replaced with the newly rendered xblock.\n             * @param xblockElement The xblock element to be refreshed.\n             * @param block_added Specifies if a block has been added, rather than just needs\n             * refreshing.\n             * @returns {jQuery promise} A promise representing the complete operation.\n             */\n            refreshChildXBlock: function(xblockElement, block_added, is_duplicate) {\n                var self = this,\n                    xblockInfo,\n                    TemporaryXBlockView,\n                    temporaryView;\n                xblockInfo = new XBlockInfo({\n                    id: xblockElement.data('locator')\n                });\n                // There is only one Backbone view created on the container page, which is\n                // for the container xblock itself. Any child xblocks rendered inside the\n                // container do not get a Backbone view. Thus, create a temporary view\n                // to render the content, and then replace the original element with the result.\n                TemporaryXBlockView = XBlockView.extend({\n                    updateHtml: function(element, html) {\n                        // Replace the element with the new HTML content, rather than adding\n                        // it as child elements.\n                        this.$el = $(html).replaceAll(element); // xss-lint: disable=javascript-jquery-insertion\n                    }\n                });\n                temporaryView = new TemporaryXBlockView({\n                    model: xblockInfo,\n                    view: self.xblockView.new_child_view,\n                    el: xblockElement\n                });\n                return temporaryView.render({\n                    success: function() {\n                        self.onXBlockRefresh(temporaryView, block_added, is_duplicate);\n                        temporaryView.unbind();  // Remove the temporary view\n                    },\n                    initRuntimeData: this\n                });\n            },\n\n            scrollToNewComponentButtons: function(event) {\n                event.preventDefault();\n                $.scrollTo(this.$('.add-xblock-component'), {duration: 250});\n            }\n        });\n\n        return XBlockContainerPage;\n    }); // end define();\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/pages/container.js","/**\n * Subviews (usually small side panels) for XBlockContainerPage.\n */\ndefine(['jquery', 'underscore', 'gettext', 'js/views/baseview', 'common/js/components/utils/view_utils',\n    'js/views/utils/xblock_utils', 'js/views/utils/move_xblock_utils', 'edx-ui-toolkit/js/utils/html-utils'],\n    function($, _, gettext, BaseView, ViewUtils, XBlockViewUtils, MoveXBlockUtils, HtmlUtils) {\n        'use strict';\n\n        var disabledCss = 'is-disabled';\n\n        /**\n         * A view that refreshes the view when certain values in the XBlockInfo have changed\n         * after a server sync operation.\n         */\n        var ContainerStateListenerView = BaseView.extend({\n\n            // takes XBlockInfo as a model\n            initialize: function() {\n                this.model.on('sync', this.onSync, this);\n            },\n\n            onSync: function(model) {\n                if (this.shouldRefresh(model)) {\n                    this.render();\n                }\n            },\n\n            shouldRefresh: function(model) {\n                return false;\n            },\n\n            render: function() {}\n        });\n\n        var ContainerAccess = ContainerStateListenerView.extend({\n            initialize: function() {\n                ContainerStateListenerView.prototype.initialize.call(this);\n                this.template = this.loadTemplate('container-access');\n            },\n\n            shouldRefresh: function(model) {\n                return ViewUtils.hasChangedAttributes(model, ['has_partition_group_components', 'user_partitions']);\n            },\n\n            render: function() {\n                HtmlUtils.setHtml(\n                    this.$el,\n                    HtmlUtils.HTML(\n                        this.template({\n                            hasPartitionGroupComponents: this.model.get('has_partition_group_components'),\n                            userPartitionInfo: this.model.get('user_partition_info')\n                        })\n                    )\n                );\n                return this;\n            }\n        });\n\n        var MessageView = ContainerStateListenerView.extend({\n            initialize: function() {\n                ContainerStateListenerView.prototype.initialize.call(this);\n                this.template = this.loadTemplate('container-message');\n            },\n\n            shouldRefresh: function(model) {\n                return ViewUtils.hasChangedAttributes(model, ['currently_visible_to_students']);\n            },\n\n            render: function() {\n                HtmlUtils.setHtml(\n                    this.$el,\n                    HtmlUtils.HTML(\n                        this.template({currentlyVisibleToStudents: this.model.get('currently_visible_to_students')})\n                    )\n                );\n                return this;\n            }\n        });\n\n        /**\n         * A controller for updating the \"View Live\" button.\n         */\n        var ViewLiveButtonController = ContainerStateListenerView.extend({\n            shouldRefresh: function(model) {\n                return ViewUtils.hasChangedAttributes(model, ['published']);\n            },\n\n            render: function() {\n                var viewLiveAction = this.$el.find('.button-view');\n                if (this.model.get('published')) {\n                    viewLiveAction.removeClass(disabledCss).attr('aria-disabled', false);\n                } else {\n                    viewLiveAction.addClass(disabledCss).attr('aria-disabled', true);\n                }\n            }\n        });\n\n        /**\n         * Publisher is a view that supports the following:\n         * 1) Publishing of a draft version of an xblock.\n         * 2) Discarding of edits in a draft version.\n         * 3) Display of who last edited the xblock, and when.\n         * 4) Display of publish status (published, published with changes, changes with no published version).\n         */\n        var Publisher = BaseView.extend({\n            events: {\n                'click .action-publish': 'publish',\n                'click .action-discard': 'discardChanges',\n                'click .action-staff-lock': 'toggleStaffLock'\n            },\n\n            // takes XBlockInfo as a model\n\n            initialize: function() {\n                BaseView.prototype.initialize.call(this);\n                this.template = this.loadTemplate('publish-xblock');\n                this.model.on('sync', this.onSync, this);\n                this.renderPage = this.options.renderPage;\n            },\n\n            onSync: function(model) {\n                if (ViewUtils.hasChangedAttributes(model, [\n                    'has_changes', 'published', 'edited_on', 'edited_by', 'visibility_state',\n                    'has_explicit_staff_lock'\n                ])) {\n                    this.render();\n                }\n            },\n\n            render: function() {\n                HtmlUtils.setHtml(\n                    this.$el,\n                    HtmlUtils.HTML(\n                        this.template({\n                            visibilityState: this.model.get('visibility_state'),\n                            visibilityClass: XBlockViewUtils.getXBlockVisibilityClass(\n                                this.model.get('visibility_state')\n                            ),\n                            hasChanges: this.model.get('has_changes'),\n                            editedOn: this.model.get('edited_on'),\n                            editedBy: this.model.get('edited_by'),\n                            published: this.model.get('published'),\n                            publishedOn: this.model.get('published_on'),\n                            publishedBy: this.model.get('published_by'),\n                            released: this.model.get('released_to_students'),\n                            releaseDate: this.model.get('release_date'),\n                            releaseDateFrom: this.model.get('release_date_from'),\n                            hasExplicitStaffLock: this.model.get('has_explicit_staff_lock'),\n                            staffLockFrom: this.model.get('staff_lock_from'),\n                            course: window.course,\n                            HtmlUtils: HtmlUtils\n                        })\n                    )\n                );\n\n                return this;\n            },\n\n            publish: function(e) {\n                var xblockInfo = this.model;\n                if (e && e.preventDefault) {\n                    e.preventDefault();\n                }\n                ViewUtils.runOperationShowingMessage(gettext('Publishing'),\n                    function() {\n                        return xblockInfo.save({publish: 'make_public'}, {patch: true});\n                    }).always(function() {\n                        xblockInfo.set('publish', null);\n                        // Hide any move notification if present.\n                        MoveXBlockUtils.hideMovedNotification();\n                    }).done(function() {\n                        xblockInfo.fetch();\n                    });\n            },\n\n            discardChanges: function(e) {\n                var xblockInfo = this.model,\n                    renderPage = this.renderPage;\n                if (e && e.preventDefault) {\n                    e.preventDefault();\n                }\n                ViewUtils.confirmThenRunOperation(gettext('Discard Changes'),\n                    gettext('Are you sure you want to revert to the last published version of the unit? You cannot undo this action.'),\n                    gettext('Discard Changes'),\n                    function() {\n                        ViewUtils.runOperationShowingMessage(gettext('Discarding Changes'),\n                            function() {\n                                return xblockInfo.save({publish: 'discard_changes'}, {patch: true});\n                            }).always(function() {\n                                xblockInfo.set('publish', null);\n                                // Hide any move notification if present.\n                                MoveXBlockUtils.hideMovedNotification();\n                            }).done(function() {\n                                renderPage();\n                            });\n                    }\n                );\n            },\n\n            toggleStaffLock: function(e) {\n                var xblockInfo = this.model,\n                    self = this,\n                    enableStaffLock, hasInheritedStaffLock,\n                    saveAndPublishStaffLock, revertCheckBox;\n                if (e && e.preventDefault) {\n                    e.preventDefault();\n                }\n                enableStaffLock = !xblockInfo.get('has_explicit_staff_lock');\n                hasInheritedStaffLock = xblockInfo.get('ancestor_has_staff_lock');\n\n                revertCheckBox = function() {\n                    self.checkStaffLock(!enableStaffLock);\n                };\n\n                saveAndPublishStaffLock = function() {\n                    // Setting staff lock to null when disabled will delete the field from this xblock,\n                    // allowing it to use the inherited value instead of using false explicitly.\n                    return xblockInfo.save({\n                        publish: 'republish',\n                        metadata: {visible_to_staff_only: enableStaffLock ? true : null}},\n                        {patch: true}\n                    ).always(function() {\n                        xblockInfo.set('publish', null);\n                    }).done(function() {\n                        xblockInfo.fetch();\n                    }).fail(function() {\n                        revertCheckBox();\n                    });\n                };\n\n                this.checkStaffLock(enableStaffLock);\n                if (enableStaffLock && !hasInheritedStaffLock) {\n                    ViewUtils.runOperationShowingMessage(gettext('Hiding from Students'),\n                        _.bind(saveAndPublishStaffLock, self));\n                } else if (enableStaffLock && hasInheritedStaffLock) {\n                    ViewUtils.runOperationShowingMessage(gettext('Explicitly Hiding from Students'),\n                        _.bind(saveAndPublishStaffLock, self));\n                } else if (!enableStaffLock && hasInheritedStaffLock) {\n                    ViewUtils.runOperationShowingMessage(gettext('Inheriting Student Visibility'),\n                        _.bind(saveAndPublishStaffLock, self));\n                } else {\n                    ViewUtils.confirmThenRunOperation(gettext('Make Visible to Students'),\n                        gettext('If the unit was previously published and released to students, any changes you made to the unit when it was hidden will now be visible to students. Do you want to proceed?'),\n                        gettext('Make Visible to Students'),\n                        function() {\n                            ViewUtils.runOperationShowingMessage(gettext('Making Visible to Students'),\n                                _.bind(saveAndPublishStaffLock, self));\n                        },\n                        function() {\n                            // On cancel, revert the check in the check box\n                            revertCheckBox();\n                        }\n                    );\n                }\n            },\n\n            checkStaffLock: function(check) {\n                this.$('.action-staff-lock i').removeClass('fa-check-square-o fa-square-o');\n                this.$('.action-staff-lock i').addClass(check ? 'fa-check-square-o' : 'fa-square-o');\n            }\n        });\n\n        /**\n         * PublishHistory displays when and by whom the xblock was last published, if it ever was.\n         */\n        var PublishHistory = BaseView.extend({\n            // takes XBlockInfo as a model\n\n            initialize: function() {\n                BaseView.prototype.initialize.call(this);\n                this.template = this.loadTemplate('publish-history');\n                this.model.on('sync', this.onSync, this);\n            },\n\n            onSync: function(model) {\n                if (ViewUtils.hasChangedAttributes(model, ['published', 'published_on', 'published_by'])) {\n                    this.render();\n                }\n            },\n\n            render: function() {\n                HtmlUtils.setHtml(\n                    this.$el,\n                    HtmlUtils.HTML(\n                        this.template({\n                            published: this.model.get('published'),\n                            published_on: this.model.get('published_on'),\n                            published_by: this.model.get('published_by')\n                        })\n                    )\n                );\n\n                return this;\n            }\n        });\n\n        return {\n            MessageView: MessageView,\n            ViewLiveButtonController: ViewLiveButtonController,\n            Publisher: Publisher,\n            PublishHistory: PublishHistory,\n            ContainerAccess: ContainerAccess\n        };\n    }); // end define();\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/pages/container_subviews.js","/**\n * The UnitOutlineView is used to render the Unit Outline component on the unit page. It shows\n * the ancestors of the unit along with its direct siblings. It also has a single \"New Unit\"\n * button to allow a new sibling unit to be added.\n */\ndefine(['underscore', 'js/views/xblock_outline', 'js/views/unit_outline_child'],\n    function(_, XBlockOutlineView, UnitOutlineChildView) {\n        var UnitOutlineView = XBlockOutlineView.extend({\n            // takes XBlockInfo as a model\n\n            templateName: 'unit-outline',\n\n            render: function() {\n                XBlockOutlineView.prototype.render.call(this);\n                this.renderAncestors();\n                return this;\n            },\n\n            renderAncestors: function() {\n                var i, listElement,\n                    ancestors, ancestor,\n                    ancestorView = this,\n                    previousAncestor = null;\n                if (this.model.get('ancestor_info')) {\n                    ancestors = this.model.get('ancestor_info').ancestors;\n                    listElement = this.getListElement();\n                    // Note: the ancestors are processed in reverse order because the tree wants to\n                    // start at the root, but the ancestors are ordered by closeness to the unit,\n                    // i.e. subsection and then section.\n                    for (i = ancestors.length - 1; i >= 0; i--) {\n                        ancestor = ancestors[i];\n                        ancestorView = this.createChildView(\n                            ancestor,\n                            previousAncestor,\n                            {parentView: ancestorView, currentUnitId: this.model.get('id')}\n                        );\n                        ancestorView.render();\n                        listElement.append(ancestorView.$el);\n                        previousAncestor = ancestor;\n                        listElement = ancestorView.getListElement();\n                    }\n                }\n                return ancestorView;\n            },\n\n            getChildViewClass: function() {\n                return UnitOutlineChildView;\n            },\n\n            getTemplateContext: function() {\n                return _.extend(\n                    XBlockOutlineView.prototype.getTemplateContext.call(this),\n                    {currentUnitId: this.model.get('id')}\n                );\n            }\n        });\n\n        return UnitOutlineView;\n    }); // end define();\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/unit_outline.js","/**\n * The UnitOutlineChildView is used to render each Section,\n * Subsection, and Unit within the Unit Outline component on the unit\n * page.\n */\ndefine(['underscore', 'js/views/xblock_outline'],\n    function(_, XBlockOutlineView) {\n        var UnitOutlineChildView = XBlockOutlineView.extend({\n            initialize: function() {\n                XBlockOutlineView.prototype.initialize.call(this);\n                this.currentUnitId = this.options.currentUnitId;\n            },\n\n            getTemplateContext: function() {\n                return _.extend(\n                    XBlockOutlineView.prototype.getTemplateContext.call(this),\n                    {currentUnitId: this.currentUnitId}\n                );\n            },\n\n            getChildViewClass: function() {\n                return UnitOutlineChildView;\n            },\n\n            createChildView: function(childInfo, parentInfo, options) {\n                options = _.isUndefined(options) ? {} : options;\n                return XBlockOutlineView.prototype.createChildView.call(\n                    this, childInfo, parentInfo, _.extend(options, {currentUnitId: this.currentUnitId})\n                );\n            }\n        });\n\n        return UnitOutlineChildView;\n    }); // end define()\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/unit_outline_child.js","/**\n * Provides utilities for move xblock.\n */\ndefine([\n    'jquery',\n    'underscore',\n    'backbone',\n    'common/js/components/views/feedback',\n    'common/js/components/views/feedback_alert',\n    'js/views/utils/xblock_utils',\n    'js/views/utils/move_xblock_utils',\n    'edx-ui-toolkit/js/utils/string-utils',\n    'jquery.smoothScroll'\n],\nfunction($, _, Backbone, Feedback, AlertView, XBlockViewUtils, MoveXBlockUtils, StringUtils) {\n    'use strict';\n    var redirectLink, moveXBlock, undoMoveXBlock, showMovedNotification, hideMovedNotification;\n\n    redirectLink = function(link) {\n        window.location.href = link;\n    };\n\n    moveXBlock = function(data) {\n        XBlockViewUtils.moveXBlock(data.sourceLocator, data.targetParentLocator)\n        .done(function(response) {\n            // hide modal\n            Backbone.trigger('move:hideMoveModal');\n            // hide xblock element\n            data.sourceXBlockElement.hide();\n            showMovedNotification(\n                StringUtils.interpolate(\n                    gettext('Success! \"{displayName}\" has been moved.'),\n                    {\n                        displayName: data.sourceDisplayName\n                    }\n                ),\n                {\n                    sourceXBlockElement: data.sourceXBlockElement,\n                    sourceDisplayName: data.sourceDisplayName,\n                    sourceLocator: data.sourceLocator,\n                    sourceParentLocator: data.sourceParentLocator,\n                    targetParentLocator: data.targetParentLocator,\n                    targetIndex: response.source_index\n                }\n            );\n            Backbone.trigger('move:onXBlockMoved');\n        });\n    };\n\n    undoMoveXBlock = function(data) {\n        XBlockViewUtils.moveXBlock(data.sourceLocator, data.sourceParentLocator, data.targetIndex)\n        .done(function() {\n            // show XBlock element\n            data.sourceXBlockElement.show();\n            showMovedNotification(\n                StringUtils.interpolate(\n                    gettext('Move cancelled. \"{sourceDisplayName}\" has been moved back to its original location.'),\n                    {\n                        sourceDisplayName: data.sourceDisplayName\n                    }\n                )\n            );\n            Backbone.trigger('move:onXBlockMoved');\n        });\n    };\n\n    showMovedNotification = function(title, data) {\n        var movedAlertView;\n        // data is provided when we click undo move button.\n        if (data) {\n            movedAlertView = new AlertView.Confirmation({\n                title: title,\n                actions: {\n                    primary: {\n                        text: gettext('Undo move'),\n                        class: 'action-save',\n                        click: function() {\n                            undoMoveXBlock(\n                                {\n                                    sourceXBlockElement: data.sourceXBlockElement,\n                                    sourceDisplayName: data.sourceDisplayName,\n                                    sourceLocator: data.sourceLocator,\n                                    sourceParentLocator: data.sourceParentLocator,\n                                    targetIndex: data.targetIndex\n                                }\n                            );\n                        }\n                    },\n                    secondary: [\n                        {\n                            text: gettext('Take me to the new location'),\n                            class: 'action-cancel',\n                            click: function() {\n                                redirectLink('/container/' + data.targetParentLocator);\n                            }\n                        }\n                    ]\n                }\n            });\n        } else {\n            movedAlertView = new AlertView.Confirmation({\n                title: title\n            });\n        }\n        movedAlertView.show();\n        // scroll to top\n        $.smoothScroll({\n            offset: 0,\n            easing: 'swing',\n            speed: 1000\n        });\n        movedAlertView.$('.wrapper').first().focus();\n        return movedAlertView;\n    };\n\n    hideMovedNotification = function() {\n        var movedAlertView = Feedback.active_alert;\n        if (movedAlertView) {\n            AlertView.prototype.hide.apply(movedAlertView);\n        }\n    };\n\n    return {\n        redirectLink: redirectLink,\n        moveXBlock: moveXBlock,\n        undoMoveXBlock: undoMoveXBlock,\n        showMovedNotification: showMovedNotification,\n        hideMovedNotification: hideMovedNotification\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/utils/move_xblock_utils.js","/**\n * XBlockAccessEditor is a view that allows the user to restrict access at the unit level on the container page.\n * This view renders the button to restrict unit access into the appropriate place in the unit page.\n */\ndefine(['js/views/baseview', 'edx-ui-toolkit/js/utils/html-utils'],\n    function(BaseView, HtmlUtils) {\n        'use strict';\n        var XBlockAccessEditor = BaseView.extend({\n            // takes XBlockInfo as a model\n            initialize: function() {\n                BaseView.prototype.initialize.call(this);\n                this.template = this.loadTemplate('xblock-access-editor');\n            },\n\n            render: function() {\n                HtmlUtils.append(\n                    this.$el,\n                    HtmlUtils.HTML(this.template({}))\n                );\n                return this;\n            }\n        });\n\n        return XBlockAccessEditor;\n    }); // end define();\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/xblock_access_editor.js","/**\n * The XBlockOutlineView is used to render an xblock and its children based upon the information\n * provided in the XBlockInfo model. It is a recursive set of views where each XBlock has its own instance.\n *\n * The class provides several opportunities to override the default behavior in subclasses:\n *  - shouldRenderChildren defaults to true meaning that the view should also create child views\n *  - shouldExpandChildren defaults to true meaning that the view should show itself as expanded\n *  - refresh is called when a server change has been made and the view needs to be refreshed\n *\n * The view can be constructed with an initialState option which is a JSON structure representing\n * the desired initial state. The parameters are as follows:\n *  - locator_to_show - the locator for the xblock which is the one being explicitly shown\n *  - scroll_offset - the scroll offset to use for the locator being shown\n *  - edit_display_name - true if the shown xblock's display name should be in inline edit mode\n */\ndefine(['jquery', 'underscore', 'gettext', 'js/views/baseview', 'common/js/components/utils/view_utils',\n    'js/views/utils/xblock_utils', 'js/views/xblock_string_field_editor',\n    'edx-ui-toolkit/js/utils/string-utils', 'edx-ui-toolkit/js/utils/html-utils'],\n    function($, _, gettext, BaseView, ViewUtils, XBlockViewUtils, XBlockStringFieldEditor, StringUtils, HtmlUtils) {\n        'use strict';\n        var XBlockOutlineView = BaseView.extend({\n            // takes XBlockInfo as a model\n\n            options: {\n                collapsedClass: 'is-collapsed'\n            },\n\n            templateName: 'xblock-outline',\n\n            initialize: function() {\n                BaseView.prototype.initialize.call(this);\n                this.initialState = this.options.initialState;\n                this.expandedLocators = this.options.expandedLocators;\n                this.template = this.options.template;\n                if (!this.template) {\n                    this.template = this.loadTemplate(this.templateName);\n                }\n                this.parentInfo = this.options.parentInfo;\n                this.parentView = this.options.parentView;\n                this.renderedChildren = false;\n                this.model.on('sync', this.onSync, this);\n            },\n\n            render: function() {\n                this.renderTemplate();\n                this.addButtonActions(this.$el);\n                this.addNameEditor();\n\n                // For cases in which we need to suppress the header controls during rendering, we'll\n                // need to add the current model's id/locator to the set of expanded locators\n                if (this.model.get('is_header_visible') !== null && !this.model.get('is_header_visible')) {\n                    var locator = this.model.get('id');\n                    if (!_.isUndefined(this.expandedLocators) && !this.expandedLocators.contains(locator)) {\n                        this.expandedLocators.add(locator);\n                        this.refresh();\n                    }\n                }\n\n                if (this.shouldRenderChildren() && this.shouldExpandChildren()) {\n                    this.renderChildren();\n                } else {\n                    this.renderedChildren = false;\n                }\n                return this;\n            },\n\n            renderTemplate: function() {\n                var html = this.template(this.getTemplateContext());\n                if (this.parentInfo) {\n                    this.setElement($(html));\n                } else {\n                    HtmlUtils.setHtml(\n                        this.$el,\n                        HtmlUtils.HTML(html)\n                    );\n                }\n            },\n\n            getTemplateContext: function() {\n                var xblockInfo = this.model,\n                    childInfo = xblockInfo.get('child_info'),\n                    parentInfo = this.parentInfo,\n                    xblockType = XBlockViewUtils.getXBlockType(this.model.get('category'), this.parentInfo),\n                    xblockTypeDisplayName = XBlockViewUtils.getXBlockType(this.model.get('category'), this.parentInfo, true),\n                    parentType = parentInfo ? XBlockViewUtils.getXBlockType(parentInfo.get('category')) : null,\n                    addChildName = null,\n                    defaultNewChildName = null,\n                    isCollapsed = this.shouldRenderChildren() && !this.shouldExpandChildren();\n                if (childInfo) {\n                    addChildName = StringUtils.interpolate(gettext('New {component_type}'), {\n                        component_type: childInfo.display_name\n                    }, true);\n                    defaultNewChildName = childInfo.display_name;\n                }\n                /* globals course */\n                return {\n                    xblockInfo: xblockInfo,\n                    visibilityClass: XBlockViewUtils.getXBlockVisibilityClass(xblockInfo.get('visibility_state')),\n                    typeListClass: XBlockViewUtils.getXBlockListTypeClass(xblockType),\n                    parentInfo: this.parentInfo,\n                    xblockType: xblockType,\n                    xblockTypeDisplayName: xblockTypeDisplayName,\n                    parentType: parentType,\n                    childType: childInfo ? XBlockViewUtils.getXBlockType(childInfo.category, xblockInfo) : null,\n                    childCategory: childInfo ? childInfo.category : null,\n                    addChildLabel: addChildName,\n                    defaultNewChildName: defaultNewChildName,\n                    isCollapsed: isCollapsed,\n                    includesChildren: this.shouldRenderChildren(),\n                    hasExplicitStaffLock: this.model.get('has_explicit_staff_lock'),\n                    staffOnlyMessage: this.model.get('staff_only_message'),\n                    course: course\n                };\n            },\n\n            renderChildren: function() {\n                var self = this,\n                    parentInfo = this.model;\n                if (parentInfo.get('child_info')) {\n                    _.each(this.model.get('child_info').children, function(childInfo) {\n                        var childOutlineView = self.createChildView(childInfo, parentInfo);\n                        childOutlineView.render();\n                        self.addChildView(childOutlineView);\n                    });\n                }\n                this.renderedChildren = true;\n            },\n\n            getListElement: function() {\n                return this.$('> .outline-content > ol');\n            },\n\n            addChildView: function(childView, xblockElement) {\n                if (xblockElement) {\n                    childView.$el.insertAfter(xblockElement);\n                } else {\n                    this.getListElement().append(childView.$el);\n                }\n            },\n\n            addNameEditor: function() {\n                var self = this,\n                    xblockField = this.$('.wrapper-xblock-field'),\n                    XBlockOutlineFieldEditor, nameEditor;\n                if (xblockField.length > 0) {\n                    // Make a subclass of the standard xblock string field editor which refreshes\n                    // the entire section that this view is contained in. This is necessary as\n                    // changing the name could have caused the section to change state.\n                    XBlockOutlineFieldEditor = XBlockStringFieldEditor.extend({\n                        refresh: function() {\n                            self.refresh();\n                        }\n                    });\n                    nameEditor = new XBlockOutlineFieldEditor({\n                        el: xblockField,\n                        model: this.model\n                    });\n                    nameEditor.render();\n                }\n            },\n\n            toggleExpandCollapse: function(event) {\n                // The course outline page tracks expanded locators. The unit location sidebar does not.\n                if (this.expandedLocators) {\n                    var locator = this.model.get('id');\n                    var wasExpanded = this.expandedLocators.contains(locator);\n                    if (wasExpanded) {\n                        this.expandedLocators.remove(locator);\n                    } else {\n                        this.expandedLocators.add(locator);\n                    }\n                }\n                // Ensure that the children have been rendered before expanding\n                this.ensureChildrenRendered();\n                BaseView.prototype.toggleExpandCollapse.call(this, event);\n            },\n\n            /**\n             * Verifies that the children are rendered (if they should be).\n             */\n            ensureChildrenRendered: function() {\n                if (!this.renderedChildren && this.shouldRenderChildren()) {\n                    this.renderChildren();\n                }\n            },\n\n            /**\n             * Adds handlers to the each button in the header's panel. This is managed outside of\n             * Backbone's own event registration so that the handlers don't get scoped to all the\n             * children of this view.\n             * @param element The root element of this view.\n             */\n            addButtonActions: function(element) {\n                var self = this;\n                element.find('.delete-button').click(_.bind(this.handleDeleteEvent, this));\n                element.find('.duplicate-button').click(_.bind(this.handleDuplicateEvent, this));\n                element.find('.button-new').click(_.bind(this.handleAddEvent, this));\n            },\n\n            shouldRenderChildren: function() {\n                return true;\n            },\n\n            shouldExpandChildren: function() {\n                return true;\n            },\n\n            getChildViewClass: function() {\n                return XBlockOutlineView;\n            },\n\n            createChildView: function(childInfo, parentInfo, options) {\n                var viewClass = this.getChildViewClass();\n                return new viewClass(_.extend({\n                    model: childInfo,\n                    parentInfo: parentInfo,\n                    parentView: this,\n                    initialState: this.initialState,\n                    expandedLocators: this.expandedLocators,\n                    template: this.template\n                }, options));\n            },\n\n            onSync: function(event) {\n                var hasChangedAttributes = ViewUtils.hasChangedAttributes(\n                    this.model,\n                    ['visibility_state', 'child_info', 'display_name', 'highlights']\n                );\n                if (hasChangedAttributes) {\n                    this.onXBlockChange();\n                }\n            },\n\n            onXBlockChange: function() {\n                var oldElement = this.$el,\n                    viewState = this.initialState;\n                this.render();\n                if (this.parentInfo) {\n                    oldElement.replaceWith(this.$el);\n                }\n                if (viewState) {\n                    this.setViewState(viewState);\n                }\n            },\n\n            setViewState: function(viewState) {\n                var locatorToShow = viewState.locator_to_show,\n                    scrollOffset = viewState.scroll_offset || 0,\n                    editDisplayName = viewState.edit_display_name,\n                    locatorElement;\n                if (locatorToShow) {\n                    if (locatorToShow === this.model.id) {\n                        locatorElement = this.$el;\n                    } else {\n                        locatorElement = this.$('.outline-item[data-locator=\"' + locatorToShow + '\"]');\n                    }\n                    if (locatorElement.length > 0) {\n                        ViewUtils.setScrollOffset(locatorElement, scrollOffset);\n                    } else {\n                        console.error('Failed to show item with locator ' + locatorToShow + '');\n                    }\n                    if (editDisplayName) {\n                        locatorElement.find('> div[class$=\"header\"] .xblock-field-value-edit').click();\n                    }\n                }\n                this.initialState = null;\n            },\n\n            /**\n             * Refresh the view's model from the server, which will cause the view to refresh.\n             * @returns {jQuery promise} A promise representing the refresh operation.\n             */\n            refresh: function() {\n                return this.model.fetch();\n            },\n\n            onChildAdded: function(locator, category) {\n                // For units, redirect to the new page, and for everything else just refresh inline.\n                if (category === 'vertical') {\n                    this.onUnitAdded(locator);\n                } else {\n                    this.refresh();\n                }\n            },\n\n            onUnitAdded: function(locator) {\n                ViewUtils.redirect('/container/' + locator + '?action=new');\n            },\n\n            onChildDeleted: function() {\n                this.refresh();\n            },\n\n            handleDeleteEvent: function(event) {\n                var self = this,\n                    parentView = this.parentView,\n                    xblockType = XBlockViewUtils.getXBlockType(this.model.get('category'), parentView.model, true);\n                event.preventDefault();\n                XBlockViewUtils.deleteXBlock(this.model, xblockType).done(function() {\n                    if (parentView) {\n                        parentView.onChildDeleted(self, event);\n                    }\n                });\n            },\n\n            /**\n             * Finds appropriate parent element for an xblock element.\n             * @param {jquery Element}  xblockElement  The xblock element to be duplicated.\n             * @param {String}  xblockType The front-end terminology of the xblock category.\n             * @returns {jquery Element} Appropriate parent element of xblock element.\n             */\n            getParentElement: function(xblockElement, xblockType) {\n                var xblockMap = {\n                        unit: 'subsection',\n                        subsection: 'section',\n                        section: 'course'\n                    },\n                    parentXblockType = xblockMap[xblockType];\n                return xblockElement.closest('.outline-' + parentXblockType);\n            },\n\n            /**\n             * Duplicate event handler.\n             */\n            handleDuplicateEvent: function(event) {\n                var self = this,\n                    xblockType = XBlockViewUtils.getXBlockType(self.model.get('category'), self.parentView.model),\n                    xblockElement = $(event.currentTarget).closest('.outline-item'),\n                    parentElement = self.getParentElement(xblockElement, xblockType);\n\n                event.preventDefault();\n                XBlockViewUtils.duplicateXBlock(xblockElement, parentElement)\n                    .done(function(data) {\n                        if (self.parentView) {\n                            self.parentView.onChildDuplicated(\n                                data.locator,\n                                xblockType,\n                                xblockElement\n                            );\n                        }\n                    });\n            },\n\n            handleAddEvent: function(event) {\n                var self = this,\n                    $target = $(event.currentTarget),\n                    category = $target.data('category');\n                event.preventDefault();\n                XBlockViewUtils.addXBlock($target).done(function(locator) {\n                    self.onChildAdded(locator, category, event);\n                });\n            }\n        });\n\n        return XBlockOutlineView;\n    }); // end define();\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/xblock_outline.js","/**\n * XBlockStringFieldEditor is a view that allows the user to inline edit an XBlock string field.\n * Clicking on the field value will hide the text and replace it with an input to allow the user\n * to change the value. Once the user leaves the field, a request will be sent to update the\n * XBlock field's value if it has been changed. If the user presses Escape, then any changes will\n * be removed and the input hidden again.\n */\ndefine(['js/views/baseview', 'js/views/utils/xblock_utils'],\n    function(BaseView, XBlockViewUtils) {\n        var XBlockStringFieldEditor = BaseView.extend({\n            events: {\n                'click .xblock-field-value-edit': 'showInput',\n                'click button[name=submit]': 'onClickSubmit',\n                'click button[name=cancel]': 'onClickCancel',\n                'click .xblock-string-field-editor': 'onClickEditor',\n                'change .xblock-field-input': 'updateField',\n                'focusout .xblock-field-input': 'onInputFocusLost',\n                'keyup .xblock-field-input': 'handleKeyUp'\n            },\n\n            // takes XBlockInfo as a model\n\n            initialize: function() {\n                BaseView.prototype.initialize.call(this);\n                this.fieldName = this.$el.data('field');\n                this.fieldDisplayName = this.$el.data('field-display-name');\n                this.template = this.loadTemplate('xblock-string-field-editor');\n                this.model.on('change:' + this.fieldName, this.onChangeField, this);\n            },\n\n            render: function() {\n                this.$el.append(this.template({\n                    value: this.model.escape(this.fieldName),\n                    fieldName: this.fieldName,\n                    fieldDisplayName: this.fieldDisplayName\n                }));\n                return this;\n            },\n\n            getLabel: function() {\n                return this.$('.xblock-field-value');\n            },\n\n            getInput: function() {\n                return this.$('.xblock-field-input');\n            },\n\n            onInputFocusLost: function() {\n                var currentValue = this.model.get(this.fieldName);\n                if (currentValue === this.getInput().val()) {\n                    this.hideInput();\n                }\n            },\n\n            onClickSubmit: function(event) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.updateField();\n            },\n\n            onClickCancel: function(event) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.cancelInput();\n            },\n\n            onClickEditor: function(event) {\n                event.stopPropagation();\n            },\n\n            onChangeField: function() {\n                var value = this.model.get(this.fieldName);\n                this.getLabel().text(value);\n                this.getInput().val(value);\n                this.hideInput();\n            },\n\n            showInput: function(event) {\n                var input = this.getInput();\n                event.preventDefault();\n                event.stopPropagation();\n                this.$el.addClass('is-editing');\n                input.focus().select();\n            },\n\n            hideInput: function() {\n                this.$el.removeClass('is-editing');\n            },\n\n            cancelInput: function() {\n                this.getInput().val(this.model.get(this.fieldName));\n                this.hideInput();\n            },\n\n            /**\n             * Refresh the model from the server so that it gets the latest publish and last modified information.\n             */\n            refresh: function() {\n                this.model.fetch();\n            },\n\n            updateField: function() {\n                var self = this,\n                    xblockInfo = this.model,\n                    newValue = this.getInput().val().trim(),\n                    oldValue = xblockInfo.get(this.fieldName);\n                // TODO: generalize this as not all xblock fields want to disallow empty strings...\n                if (newValue === '' || newValue === oldValue) {\n                    this.cancelInput();\n                    return;\n                }\n                return XBlockViewUtils.updateXBlockField(xblockInfo, this.fieldName, newValue).done(function() {\n                    self.refresh();\n                });\n            },\n\n            handleKeyUp: function(event) {\n                if (event.keyCode === 27) {   // Revert the changes if the user hits escape\n                    this.cancelInput();\n                }\n            }\n        });\n\n        return XBlockStringFieldEditor;\n    }); // end define();\n\n\n\n// WEBPACK FOOTER //\n// ./cms/static/js/views/xblock_string_field_editor.js","module.exports = \"<nav class=\\\"breadcrumbs\\\" aria-label=\\\"Course Outline breadcrumb\\\">\\n    <% _.each(breadcrumbs.slice(0, -1), function (breadcrumb, index, items) { %>\\n        <ol class=\\\"bc-container bc-<%- index %>\\\">\\n            <li class=\\\"bc-container-content\\\">\\n                <button class=\\\"parent-nav-button\\\" data-parent-index=\\\"<%- index %>\\\">\\n                    <%- breadcrumb %>\\n                </button>\\n                <span class=\\\"fa fa-angle-right breadcrumb-fa-icon\\\" aria-hidden=\\\"true\\\"></span>\\n            </li>\\n        </ol>\\n    <% }) %>\\n    <ol class=\\\"bc-container bc-<%- breadcrumbs.length - 1 %> last\\\">\\n        <li class=\\\"bc-container-content\\\">\\n            <span class=\\\"parent-displayname\\\"><%- breadcrumbs[breadcrumbs.length - 1] %></span>\\n        </li>\\n    </ol>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./cms/templates/js/move-xblock-breadcrumb.underscore\n// module id = ./cms/templates/js/move-xblock-breadcrumb.underscore\n// module chunks = 5 6","module.exports = \"<div class=\\\"xblock-items-category\\\">\\n    <span class=\\\"sr\\\">\\n        <%\\n        // Translators: message will be like `Units in Homework - Question Styles`, `Subsections in Example 1 - Getting started` etc.\\n        %>\\n        <%- StringUtils.interpolate(\\n                gettext(\\\"{categoryText} in {parentDisplayname}\\\"),\\n                {categoryText: categoryText, parentDisplayname: parentDisplayname}\\n            )\\n        %>\\n    </span>\\n    <span class=\\\"category-text\\\" aria-hidden=\\\"true\\\">\\n        <%- categoryText %>:\\n    </span>\\n</div>\\n<ul class=\\\"xblock-items-container\\\" data-items-category=\\\"<%- XBlocksCategory %>\\\">\\n    <% for (var i = 0; i < xblocks.length; i++) {\\n        var xblock = xblocks[i];\\n    %>\\n        <li class=\\\"xblock-item\\\" data-item-index=\\\"<%- i %>\\\">\\n            <% if (sourceXBlockId !== xblock.id && (xblock.get('child_info') || XBlocksCategory !== 'component')) { %>\\n                <button class=\\\"button-forward\\\" >\\n                    <span class=\\\"xblock-displayname truncate\\\">\\n                        <%- xblock.get('display_name') %>\\n                    </span>\\n                    <% if(currentLocationIndex === i) { %>\\n                        <span class=\\\"current-location\\\">\\n                            (<%- gettext('Current location') %>)\\n                        </span>\\n                    <% } %>\\n                    <span class=\\\"icon fa fa-arrow-right forward-sr-icon\\\" aria-hidden=\\\"true\\\"></span>\\n                    <span class=\\\"sr forward-sr-text\\\"><%- gettext(\\\"View child items\\\") %></span>\\n                </button>\\n            <% } else { %>\\n                <span class=\\\"component\\\">\\n                    <span class=\\\"xblock-displayname truncate\\\">\\n                        <%- xblock.get('display_name') %>\\n                    </span>\\n                    <% if(currentLocationIndex === i) { %>\\n                        <span class=\\\"current-location\\\">\\n                            (<%- gettext('Currently selected') %>)\\n                        </span>\\n                    <% } %>\\n                </span>\\n            <% } %>\\n        </li>\\n    <% } %>\\n    <% if(xblocks.length === 0) { %>\\n        <span class=\\\"xblock-no-child-message\\\">\\n            <%- noChildText %>\\n        </span>\\n    <% } %>\\n</ul>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./cms/templates/js/move-xblock-list.underscore\n// module id = ./cms/templates/js/move-xblock-list.underscore\n// module chunks = 5 6","module.exports = \"<div class=\\\"ui-loading\\\">\\n    <p>\\n        <span class=\\\"spin\\\">\\n            <span class=\\\"icon fa fa-refresh\\\" aria-hidden=\\\"true\\\"></span>\\n        </span>\\n        <span class=\\\"copy\\\"><%- gettext('Loading') %></span>\\n    </p>\\n</div>\\n<div class='breadcrumb-container is-hidden'></div>\\n<div class='xblock-list-container'></div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./cms/templates/js/move-xblock-modal.underscore\n// module id = ./cms/templates/js/move-xblock-modal.underscore\n// module chunks = 5 6","\n    'use strict';\n    define(['jquery', 'underscore', 'underscore.string', 'common/js/components/views/feedback'],\n        function($, _, str, SystemFeedbackView) {\n            var Alert = SystemFeedbackView.extend({\n                options: $.extend({}, SystemFeedbackView.prototype.options, {\n                    type: 'alert'\n                }),\n                slide_speed: 900,\n                show: function() {\n                    SystemFeedbackView.prototype.show.apply(this, arguments);\n                    this.$el.hide();\n                    this.$el.slideDown(this.slide_speed);\n                    return this;\n                },\n                hide: function() {\n                    this.$el.slideUp({\n                        duration: this.slide_speed\n                    });\n                    setTimeout(_.bind(SystemFeedbackView.prototype.hide, this, arguments),\n                           this.slideSpeed);\n                }\n            });\n\n        // create Alert.Warning, Alert.Confirmation, etc\n            var capitalCamel, intents;\n            capitalCamel = _.compose(str.capitalize, str.camelize);\n            intents = ['warning', 'error', 'confirmation', 'announcement', 'step-required', 'help', 'mini'];\n            _.each(intents, function(intent) {\n                var subclass;\n                subclass = Alert.extend({\n                    options: $.extend({}, Alert.prototype.options, {\n                        intent: intent\n                    })\n                });\n                Alert[capitalCamel(intent)] = subclass;\n            });\n\n            return Alert;\n        });\n\n\n\n\n// WEBPACK FOOTER //\n// ./common/static/common/js/components/views/feedback_alert.js","(function() { module.exports = window[\"jQuery\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 0\n// module chunks = 3 4 5 6 9 10 11 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 84","(function() { module.exports = window[\"_\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"_\"\n// module id = 1\n// module chunks = 3 4 5 6 9 10 11 14 15 16 18 19 20 21 23 24 25 26 27 28 29 30 31 34 35 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75","(function() { module.exports = window[\"Backbone\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Backbone\"\n// module id = 2\n// module chunks = 3 5 6 9 10 11 14 15 20 21 23 24 33 85","(function() { module.exports = window[\"gettext\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"gettext\"\n// module id = 3\n// module chunks = 5 6 10 14 15 16 20 21 24","(function() { module.exports = window[\"URI\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"URI\"\n// module id = 4\n// module chunks = 5 6 15"],"sourceRoot":""}